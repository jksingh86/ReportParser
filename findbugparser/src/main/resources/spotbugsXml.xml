
<BugCollection sequence='0' release='' analysisTimestamp='1594893286024' version='3.1.12' timestamp='1594893248856'><Project projectName='automation-ui'><Jar>/home/jitendra/projects/cucumberui/target/classes</Jar><AuxClasspathEntry>/home/jitendra/.m2/repository/org/springframework/boot/spring-boot-starter-thymeleaf/1.5.10.RELEASE/spring-boot-starter-thymeleaf-1.5.10.RELEASE.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/springframework/boot/spring-boot-starter/1.5.10.RELEASE/spring-boot-starter-1.5.10.RELEASE.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/thymeleaf/thymeleaf-spring4/2.1.6.RELEASE/thymeleaf-spring4-2.1.6.RELEASE.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/thymeleaf/thymeleaf/2.1.6.RELEASE/thymeleaf-2.1.6.RELEASE.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/ognl/ognl/3.0.8/ognl-3.0.8.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/javassist/javassist/3.21.0-GA/javassist-3.21.0-GA.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/unbescape/unbescape/1.1.0.RELEASE/unbescape-1.1.0.RELEASE.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/nz/net/ultraq/thymeleaf/thymeleaf-layout-dialect/1.4.0/thymeleaf-layout-dialect-1.4.0.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/codehaus/groovy/groovy/2.4.13/groovy-2.4.13.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/springframework/boot/spring-boot-devtools/1.5.10.RELEASE/spring-boot-devtools-1.5.10.RELEASE.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/springframework/boot/spring-boot/1.5.10.RELEASE/spring-boot-1.5.10.RELEASE.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/1.5.10.RELEASE/spring-boot-autoconfigure-1.5.10.RELEASE.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/springframework/spring-core/4.3.14.RELEASE/spring-core-4.3.14.RELEASE.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/apache/httpcomponents/httpclient/4.5.5/httpclient-4.5.5.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/apache/httpcomponents/httpcore/4.4.9/httpcore-4.4.9.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/commons-codec/commons-codec/1.10/commons-codec-1.10.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/commons-fileupload/commons-fileupload/1.3/commons-fileupload-1.3.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/commons-io/commons-io/2.2/commons-io-2.2.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/commons-lang/commons-lang/2.6/commons-lang-2.6.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/javax/servlet/javax.servlet-api/3.1.0/javax.servlet-api-3.1.0.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/apache/commons/commons-exec/1.3/commons-exec-1.3.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.8.10/jackson-databind-2.8.10.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.8.0/jackson-annotations-2.8.0.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.8.10/jackson-core-2.8.10.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/springframework/boot/spring-boot-starter-web/1.5.10.RELEASE/spring-boot-starter-web-1.5.10.RELEASE.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/hibernate/hibernate-validator/5.3.6.Final/hibernate-validator-5.3.6.Final.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/javax/validation/validation-api/1.1.0.Final/validation-api-1.1.0.Final.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/jboss/logging/jboss-logging/3.3.1.Final/jboss-logging-3.3.1.Final.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/springframework/spring-webmvc/4.3.14.RELEASE/spring-webmvc-4.3.14.RELEASE.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/springframework/spring-aop/4.3.14.RELEASE/spring-aop-4.3.14.RELEASE.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/springframework/spring-beans/4.3.14.RELEASE/spring-beans-4.3.14.RELEASE.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/springframework/spring-context/4.3.14.RELEASE/spring-context-4.3.14.RELEASE.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/springframework/spring-expression/4.3.14.RELEASE/spring-expression-4.3.14.RELEASE.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/springframework/spring-web/4.3.14.RELEASE/spring-web-4.3.14.RELEASE.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/ch/qos/logback/logback-classic/1.1.11/logback-classic-1.1.11.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/ch/qos/logback/logback-core/1.1.11/logback-core-1.1.11.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/springframework/boot/spring-boot-starter-aop/1.5.10.RELEASE/spring-boot-starter-aop-1.5.10.RELEASE.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/aspectj/aspectjweaver/1.8.13/aspectjweaver-1.8.13.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/springframework/boot/spring-boot-starter-data-mongodb/1.5.10.RELEASE/spring-boot-starter-data-mongodb-1.5.10.RELEASE.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/mongodb/mongodb-driver/3.4.3/mongodb-driver-3.4.3.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/mongodb/mongodb-driver-core/3.4.3/mongodb-driver-core-3.4.3.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/mongodb/bson/3.4.3/bson-3.4.3.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/springframework/data/spring-data-mongodb/1.10.10.RELEASE/spring-data-mongodb-1.10.10.RELEASE.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/springframework/spring-tx/4.3.14.RELEASE/spring-tx-4.3.14.RELEASE.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/springframework/data/spring-data-commons/1.13.10.RELEASE/spring-data-commons-1.13.10.RELEASE.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/springframework/boot/spring-boot-starter-logging/1.5.10.RELEASE/spring-boot-starter-logging-1.5.10.RELEASE.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/slf4j/jcl-over-slf4j/1.7.25/jcl-over-slf4j-1.7.25.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/slf4j/jul-to-slf4j/1.7.25/jul-to-slf4j-1.7.25.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/slf4j/log4j-over-slf4j/1.7.25/log4j-over-slf4j-1.7.25.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/springframework/boot/spring-boot-starter-security/1.5.10.RELEASE/spring-boot-starter-security-1.5.10.RELEASE.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/springframework/security/spring-security-config/4.2.4.RELEASE/spring-security-config-4.2.4.RELEASE.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/springframework/security/spring-security-core/4.2.4.RELEASE/spring-security-core-4.2.4.RELEASE.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/springframework/security/spring-security-web/4.2.4.RELEASE/spring-security-web-4.2.4.RELEASE.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/com/github/spotbugs/spotbugs-maven-plugin/3.1.12.2/spotbugs-maven-plugin-3.1.12.2.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/com/github/spotbugs/spotbugs/3.1.12/spotbugs-3.1.12.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/apache/bcel/bcel/6.3/bcel-6.3.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/net/jcip/jcip-annotations/1.0/jcip-annotations-1.0.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/jaxen/jaxen/1.1.6/jaxen-1.1.6.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/com/github/spotbugs/spotbugs-annotations/3.1.12/spotbugs-annotations-3.1.12.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/slf4j/slf4j-simple/1.7.25/slf4j-simple-1.7.25.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/apache/ant/ant/1.10.6/ant-1.10.6.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/apache/ant/ant-launcher/1.10.6/ant-launcher-1.10.6.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/codehaus/groovy/groovy/3.0.0-beta-2/groovy-3.0.0-beta-2-indy.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/codehaus/groovy/groovy-ant/3.0.0-beta-2/groovy-ant-3.0.0-beta-2-indy.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/codehaus/groovy/groovy-dateutil/3.0.0-beta-2/groovy-dateutil-3.0.0-beta-2-indy.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/codehaus/groovy/groovy-groovydoc/2.4.13/groovy-groovydoc-2.4.13.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/codehaus/groovy/groovy-templates/2.4.13/groovy-templates-2.4.13.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/codehaus/groovy/groovy-xml/2.4.13/groovy-xml-2.4.13.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/apache/maven/reporting/maven-reporting-impl/3.0.0/maven-reporting-impl-3.0.0.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/apache/maven/shared/maven-shared-utils/3.2.0/maven-shared-utils-3.2.0.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/apache/maven/reporting/maven-reporting-api/3.0/maven-reporting-api-3.0.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/apache/maven/maven-plugin-api/3.5.0/maven-plugin-api-3.5.0.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/apache/maven/maven-model/3.5.0/maven-model-3.5.0.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/eclipse/sisu/org.eclipse.sisu.plexus/0.3.3/org.eclipse.sisu.plexus-0.3.3.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/javax/enterprise/cdi-api/1.0/cdi-api-1.0.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/javax/annotation/jsr250-api/1.0/jsr250-api-1.0.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/eclipse/sisu/org.eclipse.sisu.inject/0.3.3/org.eclipse.sisu.inject-0.3.3.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/apache/maven/maven-artifact/3.5.0/maven-artifact-3.5.0.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/apache/maven/shared/maven-artifact-transfer/0.11.0/maven-artifact-transfer-0.11.0.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/codehaus/plexus/plexus-component-annotations/1.7.1/plexus-component-annotations-1.7.1.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/apache/maven/shared/maven-common-artifact-filters/3.0.1/maven-common-artifact-filters-3.0.1.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/sonatype/sisu/sisu-inject-plexus/1.4.2/sisu-inject-plexus-1.4.2.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/sonatype/sisu/sisu-inject-bean/1.4.2/sisu-inject-bean-1.4.2.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/sonatype/sisu/sisu-guice/2.1.7/sisu-guice-2.1.7-noaop.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/apache/maven/maven-core/3.1.1/maven-core-3.1.1.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/apache/maven/maven-settings/3.1.1/maven-settings-3.1.1.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/apache/maven/maven-settings-builder/3.1.1/maven-settings-builder-3.1.1.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/apache/maven/maven-repository-metadata/3.1.1/maven-repository-metadata-3.1.1.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/apache/maven/maven-model-builder/3.1.1/maven-model-builder-3.1.1.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/apache/maven/maven-aether-provider/3.1.1/maven-aether-provider-3.1.1.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/eclipse/aether/aether-spi/0.9.0.M2/aether-spi-0.9.0.M2.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/eclipse/aether/aether-impl/0.9.0.M2/aether-impl-0.9.0.M2.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/eclipse/aether/aether-api/0.9.0.M2/aether-api-0.9.0.M2.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/eclipse/aether/aether-util/0.9.0.M2/aether-util-0.9.0.M2.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/codehaus/plexus/plexus-interpolation/1.19/plexus-interpolation-1.19.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/codehaus/plexus/plexus-classworlds/2.5.1/plexus-classworlds-2.5.1.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/sonatype/plexus/plexus-sec-dispatcher/1.3/plexus-sec-dispatcher-1.3.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/sonatype/plexus/plexus-cipher/1.4/plexus-cipher-1.4.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/apache/maven/doxia/doxia-core/1.9/doxia-core-1.9.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/apache/maven/doxia/doxia-logging-api/1.9/doxia-logging-api-1.9.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/apache/maven/doxia/doxia-sink-api/1.9/doxia-sink-api-1.9.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/apache/maven/doxia/doxia-decoration-model/1.9.1/doxia-decoration-model-1.9.1.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/apache/maven/doxia/doxia-site-renderer/1.9.1/doxia-site-renderer-1.9.1.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/apache/maven/doxia/doxia-skin-model/1.9.1/doxia-skin-model-1.9.1.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/apache/maven/doxia/doxia-module-xhtml/1.9/doxia-module-xhtml-1.9.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/apache/maven/doxia/doxia-module-xhtml5/1.9/doxia-module-xhtml5-1.9.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/codehaus/plexus/plexus-i18n/1.0-beta-10/plexus-i18n-1.0-beta-10.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/codehaus/plexus/plexus-velocity/1.2/plexus-velocity-1.2.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/apache/velocity/velocity/1.7/velocity-1.7.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/apache/velocity/velocity-tools/2.0/velocity-tools-2.0.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/oro/oro/2.0.8/oro-2.0.8.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/sslext/sslext/1.2-0/sslext-1.2-0.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/apache/maven/doxia/doxia-integration-tools/1.9.1/doxia-integration-tools-1.9.1.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/commons-beanutils/commons-beanutils/1.9.3/commons-beanutils-1.9.3.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/commons-chain/commons-chain/1.2/commons-chain-1.2.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/commons-collections/commons-collections/3.2.2/commons-collections-3.2.2.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/commons-digester/commons-digester/2.1/commons-digester-2.1.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/apache/commons/commons-lang3/3.9/commons-lang3-3.9.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/commons-validator/commons-validator/1.6/commons-validator-1.6.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/codehaus/plexus/plexus-container-default/2.0.0/plexus-container-default-2.0.0.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/apache/xbean/xbean-reflect/3.7/xbean-reflect-3.7.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/codehaus/plexus/plexus-resources/1.1.0/plexus-resources-1.1.0.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/codehaus/plexus/plexus-utils/3.2.1/plexus-utils-3.2.1.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/ow2/asm/asm/7.2-beta/asm-7.2-beta.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/ow2/asm/asm-analysis/7.2-beta/asm-analysis-7.2-beta.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/ow2/asm/asm-commons/7.2-beta/asm-commons-7.2-beta.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/ow2/asm/asm-tree/7.2-beta/asm-tree-7.2-beta.jar</AuxClasspathEntry><AuxClasspathEntry>/home/jitendra/.m2/repository/org/ow2/asm/asm-util/7.2-beta/asm-util-7.2-beta.jar</AuxClasspathEntry><Plugin id='com.h3xstream.findsecbugs' enabled='true'></Plugin><SrcDir>/home/jitendra/projects/cucumberui/src/main/java</SrcDir><WrkDir>/home/jitendra/projects/cucumberui/target</WrkDir></Project><BugInstance instanceOccurrenceNum='0' instanceHash='1d670c0b43699d7e73996342bc9babd3' cweid='117' rank='12' abbrev='SECCRLFLOG' category='SECURITY' priority='2' type='CRLF_INJECTION_LOGS' instanceOccurrenceMax='0'><ShortMessage>Potential CRLF Injection for logs</ShortMessage><LongMessage>This use of org/slf4j/Logger.info(Ljava/lang/String;)V might be used to include CRLF characters into log messages</LongMessage><Class classname='easyupload.controller.FileController' primary='true'><SourceLine classname='easyupload.controller.FileController' start='54' end='297' sourcepath='easyupload/controller/FileController.java' sourcefile='FileController.java'><Message>At FileController.java:[lines 54-297]</Message></SourceLine><Message>In class easyupload.controller.FileController</Message></Class><Method isStatic='false' classname='easyupload.controller.FileController' signature='(Ljava/lang/String;)Ljava/lang/String;' name='getSelectedTestGroups' primary='true'><SourceLine endBytecode='287' classname='easyupload.controller.FileController' start='202' end='216' sourcepath='easyupload/controller/FileController.java' sourcefile='FileController.java' startBytecode='0'></SourceLine><Message>In method easyupload.controller.FileController.getSelectedTestGroups(String)</Message></Method><SourceLine endBytecode='75' classname='easyupload.controller.FileController' start='215' end='215' sourcepath='easyupload/controller/FileController.java' sourcefile='FileController.java' startBytecode='75' primary='true'><Message>At FileController.java:[line 215]</Message></SourceLine><String role='Sink method' value='org/slf4j/Logger.info(Ljava/lang/String;)V'><Message>Sink method org/slf4j/Logger.info(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='com/fasterxml/jackson/databind/ObjectMapper.writeValueAsString(Ljava/lang/Object;)Ljava/lang/String;'><Message>Unknown source com/fasterxml/jackson/databind/ObjectMapper.writeValueAsString(Ljava/lang/Object;)Ljava/lang/String;</Message></String><SourceLine endBytecode='27' classname='easyupload.controller.FileController' start='209' end='209' sourcepath='easyupload/controller/FileController.java' sourcefile='FileController.java' startBytecode='27'><Message>At FileController.java:[line 209]</Message></SourceLine><SourceLine endBytecode='59' classname='easyupload.controller.FileController' start='215' end='215' sourcepath='easyupload/controller/FileController.java' sourcefile='FileController.java' startBytecode='59'><Message>At FileController.java:[line 215]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='a5d7bc05a8af6599727ceea8120717ab' cweid='117' rank='12' abbrev='SECCRLFLOG' category='SECURITY' priority='2' type='CRLF_INJECTION_LOGS' instanceOccurrenceMax='0'><ShortMessage>Potential CRLF Injection for logs</ShortMessage><LongMessage>This use of org/slf4j/Logger.info(Ljava/lang/String;)V might be used to include CRLF characters into log messages</LongMessage><Class classname='easyupload.controller.FileController' primary='true'><SourceLine classname='easyupload.controller.FileController' start='54' end='297' sourcepath='easyupload/controller/FileController.java' sourcefile='FileController.java'><Message>At FileController.java:[lines 54-297]</Message></SourceLine><Message>In class easyupload.controller.FileController</Message></Class><Method isStatic='false' classname='easyupload.controller.FileController' signature='(Ljava/lang/String;Lorg/springframework/web/multipart/MultipartHttpServletRequest;)Lorg/springframework/http/ResponseEntity;' name='uploadFile' primary='true'><SourceLine endBytecode='766' classname='easyupload.controller.FileController' start='98' end='141' sourcepath='easyupload/controller/FileController.java' sourcefile='FileController.java' startBytecode='0'></SourceLine><Message>In method easyupload.controller.FileController.uploadFile(String, MultipartHttpServletRequest)</Message></Method><SourceLine endBytecode='23' classname='easyupload.controller.FileController' start='98' end='98' sourcepath='easyupload/controller/FileController.java' sourcefile='FileController.java' startBytecode='23' primary='true'><Message>At FileController.java:[line 98]</Message></SourceLine><String role='Sink method' value='org/slf4j/Logger.info(Ljava/lang/String;)V'><Message>Sink method org/slf4j/Logger.info(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><SourceLine endBytecode='17' classname='easyupload.controller.FileController' start='98' end='98' sourcepath='easyupload/controller/FileController.java' sourcefile='FileController.java' startBytecode='17'><Message>At FileController.java:[line 98]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='9051a7b7436d8a858831b8669d9c30db' cweid='117' rank='15' abbrev='SECCRLFLOG' category='SECURITY' priority='3' type='CRLF_INJECTION_LOGS' instanceOccurrenceMax='0'><ShortMessage>Potential CRLF Injection for logs</ShortMessage><LongMessage>This use of org/slf4j/Logger.debug(Ljava/lang/String;)V might be used to include CRLF characters into log messages</LongMessage><Class classname='easyupload.controller.FileController' primary='true'><SourceLine classname='easyupload.controller.FileController' start='54' end='297' sourcepath='easyupload/controller/FileController.java' sourcefile='FileController.java'><Message>At FileController.java:[lines 54-297]</Message></SourceLine><Message>In class easyupload.controller.FileController</Message></Class><Method isStatic='false' classname='easyupload.controller.FileController' signature='(Ljava/io/File;Ljava/lang/String;)Z' name='checkModified' primary='true'><SourceLine endBytecode='586' classname='easyupload.controller.FileController' start='265' end='297' sourcepath='easyupload/controller/FileController.java' sourcefile='FileController.java' startBytecode='0'></SourceLine><Message>In method easyupload.controller.FileController.checkModified(File, String)</Message></Method><SourceLine endBytecode='69' classname='easyupload.controller.FileController' start='273' end='273' sourcepath='easyupload/controller/FileController.java' sourcefile='FileController.java' startBytecode='69' primary='true'><Message>At FileController.java:[line 273]</Message></SourceLine><String role='Sink method' value='org/slf4j/Logger.debug(Ljava/lang/String;)V'><Message>Sink method org/slf4j/Logger.debug(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='java/nio/file/WatchService.poll()Ljava/nio/file/WatchKey;'><Message>Unknown source java/nio/file/WatchService.poll()Ljava/nio/file/WatchKey;</Message></String><SourceLine endBytecode='38' classname='easyupload.controller.FileController' start='272' end='272' sourcepath='easyupload/controller/FileController.java' sourcefile='FileController.java' startBytecode='38'><Message>At FileController.java:[line 272]</Message></SourceLine><SourceLine endBytecode='63' classname='easyupload.controller.FileController' start='273' end='273' sourcepath='easyupload/controller/FileController.java' sourcefile='FileController.java' startBytecode='63'><Message>At FileController.java:[line 273]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='9472ac8e593288703798278348f1d124' cweid='117' rank='15' abbrev='SECCRLFLOG' category='SECURITY' priority='3' type='CRLF_INJECTION_LOGS' instanceOccurrenceMax='0'><ShortMessage>Potential CRLF Injection for logs</ShortMessage><LongMessage>This use of org/slf4j/Logger.debug(Ljava/lang/String;)V might be used to include CRLF characters into log messages</LongMessage><Class classname='easyupload.controller.FileController' primary='true'><SourceLine classname='easyupload.controller.FileController' start='54' end='297' sourcepath='easyupload/controller/FileController.java' sourcefile='FileController.java'><Message>At FileController.java:[lines 54-297]</Message></SourceLine><Message>In class easyupload.controller.FileController</Message></Class><Method isStatic='false' classname='easyupload.controller.FileController' signature='(Ljava/io/File;Ljava/lang/String;)Z' name='checkModified' primary='true'><SourceLine endBytecode='586' classname='easyupload.controller.FileController' start='265' end='297' sourcepath='easyupload/controller/FileController.java' sourcefile='FileController.java' startBytecode='0'></SourceLine><Message>In method easyupload.controller.FileController.checkModified(File, String)</Message></Method><SourceLine endBytecode='269' classname='easyupload.controller.FileController' start='295' end='295' sourcepath='easyupload/controller/FileController.java' sourcefile='FileController.java' startBytecode='269' primary='true'><Message>At FileController.java:[line 295]</Message></SourceLine><String role='Sink method' value='org/slf4j/Logger.debug(Ljava/lang/String;)V'><Message>Sink method org/slf4j/Logger.debug(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='java/io/File.getAbsolutePath()Ljava/lang/String;'><Message>Unknown source java/io/File.getAbsolutePath()Ljava/lang/String;</Message></String><SourceLine endBytecode='42' classname='easyupload.controller.FileController' start='228' end='228' sourcepath='easyupload/controller/FileController.java' sourcefile='FileController.java' startBytecode='42'><Message>At FileController.java:[line 228]</Message></SourceLine><SourceLine endBytecode='263' classname='easyupload.controller.FileController' start='295' end='295' sourcepath='easyupload/controller/FileController.java' sourcefile='FileController.java' startBytecode='263'><Message>At FileController.java:[line 295]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='b45512e776ea7f4790ab91052a97425d' cweid='117' rank='15' abbrev='SECCRLFLOG' category='SECURITY' priority='3' type='CRLF_INJECTION_LOGS' instanceOccurrenceMax='0'><ShortMessage>Potential CRLF Injection for logs</ShortMessage><LongMessage>This use of org/slf4j/Logger.info(Ljava/lang/String;)V might be used to include CRLF characters into log messages</LongMessage><Class classname='easyupload.controller.FileController' primary='true'><SourceLine classname='easyupload.controller.FileController' start='54' end='297' sourcepath='easyupload/controller/FileController.java' sourcefile='FileController.java'><Message>At FileController.java:[lines 54-297]</Message></SourceLine><Message>In class easyupload.controller.FileController</Message></Class><Method isStatic='false' classname='easyupload.controller.FileController' signature='()Ljava/lang/String;' name='getTestGroups' primary='true'><SourceLine endBytecode='371' classname='easyupload.controller.FileController' start='174' end='193' sourcepath='easyupload/controller/FileController.java' sourcefile='FileController.java' startBytecode='0'></SourceLine><Message>In method easyupload.controller.FileController.getTestGroups()</Message></Method><SourceLine endBytecode='133' classname='easyupload.controller.FileController' start='192' end='192' sourcepath='easyupload/controller/FileController.java' sourcefile='FileController.java' startBytecode='133' primary='true'><Message>At FileController.java:[line 192]</Message></SourceLine><String role='Sink method' value='org/slf4j/Logger.info(Ljava/lang/String;)V'><Message>Sink method org/slf4j/Logger.info(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='com/fasterxml/jackson/databind/ObjectMapper.writeValueAsString(Ljava/lang/Object;)Ljava/lang/String;'><Message>Unknown source com/fasterxml/jackson/databind/ObjectMapper.writeValueAsString(Ljava/lang/Object;)Ljava/lang/String;</Message></String><SourceLine endBytecode='94' classname='easyupload.controller.FileController' start='187' end='187' sourcepath='easyupload/controller/FileController.java' sourcefile='FileController.java' startBytecode='94'><Message>At FileController.java:[line 187]</Message></SourceLine><SourceLine endBytecode='130' classname='easyupload.controller.FileController' start='192' end='192' sourcepath='easyupload/controller/FileController.java' sourcefile='FileController.java' startBytecode='130'><Message>At FileController.java:[line 192]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='f7319055a906dc03fcf620172b8835d4' cweid='117' rank='15' abbrev='SECCRLFLOG' category='SECURITY' priority='3' type='CRLF_INJECTION_LOGS' instanceOccurrenceMax='0'><ShortMessage>Potential CRLF Injection for logs</ShortMessage><LongMessage>This use of org/slf4j/Logger.debug(Ljava/lang/String;)V might be used to include CRLF characters into log messages</LongMessage><Class classname='easyupload.controller.FileController' primary='true'><SourceLine classname='easyupload.controller.FileController' start='54' end='297' sourcepath='easyupload/controller/FileController.java' sourcefile='FileController.java'><Message>At FileController.java:[lines 54-297]</Message></SourceLine><Message>In class easyupload.controller.FileController</Message></Class><Method isStatic='false' classname='easyupload.controller.FileController' signature='()Ljava/lang/String;' name='readTestGroups' primary='true'><SourceLine endBytecode='660' classname='easyupload.controller.FileController' start='223' end='260' sourcepath='easyupload/controller/FileController.java' sourcefile='FileController.java' startBytecode='0'></SourceLine><Message>In method easyupload.controller.FileController.readTestGroups()</Message></Method><SourceLine endBytecode='212' classname='easyupload.controller.FileController' start='258' end='258' sourcepath='easyupload/controller/FileController.java' sourcefile='FileController.java' startBytecode='212' primary='true'><Message>At FileController.java:[line 258]</Message></SourceLine><String role='Sink method' value='org/slf4j/Logger.debug(Ljava/lang/String;)V'><Message>Sink method org/slf4j/Logger.debug(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='easyupload/controller/FileController.testGroupList'><Message>Unknown source easyupload/controller/FileController.testGroupList</Message></String><SourceLine endBytecode='209' classname='easyupload.controller.FileController' start='258' end='258' sourcepath='easyupload/controller/FileController.java' sourcefile='FileController.java' startBytecode='209'><Message>At FileController.java:[line 258]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='9332b089d558469179fc5ab1cd378f7d' cweid='209' rank='15' abbrev='ERRMSG' category='SECURITY' priority='3' type='INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE' instanceOccurrenceMax='0'><ShortMessage>Information Exposure Through An Error Message</ShortMessage><LongMessage>Possible information exposure through an error message</LongMessage><Class classname='easyupload.controller.FileController' primary='true'><SourceLine classname='easyupload.controller.FileController' start='54' end='297' sourcepath='easyupload/controller/FileController.java' sourcefile='FileController.java'><Message>At FileController.java:[lines 54-297]</Message></SourceLine><Message>In class easyupload.controller.FileController</Message></Class><Method isStatic='false' classname='easyupload.controller.FileController' signature='(Ljava/lang/String;Lorg/springframework/web/multipart/MultipartHttpServletRequest;)Lorg/springframework/http/ResponseEntity;' name='uploadFile' primary='true'><SourceLine endBytecode='766' classname='easyupload.controller.FileController' start='98' end='141' sourcepath='easyupload/controller/FileController.java' sourcefile='FileController.java' startBytecode='0'></SourceLine><Message>In method easyupload.controller.FileController.uploadFile(String, MultipartHttpServletRequest)</Message></Method><SourceLine endBytecode='234' classname='easyupload.controller.FileController' start='134' end='134' sourcepath='easyupload/controller/FileController.java' sourcefile='FileController.java' startBytecode='234' primary='true'><Message>At FileController.java:[line 134]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='1c1207317106504b6719ea017af1c172' cweid='22' rank='12' abbrev='SECPTI' category='SECURITY' priority='2' type='PATH_TRAVERSAL_IN' instanceOccurrenceMax='0'><ShortMessage>Potential Path Traversal (file read)</ShortMessage><LongMessage>java/io/File.&lt;init&gt;(Ljava/lang/String;)V reads a file whose location might be specified by user input</LongMessage><Class classname='easyupload.controller.FileController' primary='true'><SourceLine classname='easyupload.controller.FileController' start='54' end='297' sourcepath='easyupload/controller/FileController.java' sourcefile='FileController.java'><Message>At FileController.java:[lines 54-297]</Message></SourceLine><Message>In class easyupload.controller.FileController</Message></Class><Method isStatic='false' classname='easyupload.controller.FileController' signature='()Ljava/lang/String;' name='readTestGroups' primary='true'><SourceLine endBytecode='660' classname='easyupload.controller.FileController' start='223' end='260' sourcepath='easyupload/controller/FileController.java' sourcefile='FileController.java' startBytecode='0'></SourceLine><Message>In method easyupload.controller.FileController.readTestGroups()</Message></Method><SourceLine endBytecode='22' classname='easyupload.controller.FileController' start='226' end='226' sourcepath='easyupload/controller/FileController.java' sourcefile='FileController.java' startBytecode='22' primary='true'><Message>At FileController.java:[line 226]</Message></SourceLine><String role='Sink method' value='java/io/File.&lt;init&gt;(Ljava/lang/String;)V'><Message>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='easyupload/controller/FileController.testGroupFile'><Message>Unknown source easyupload/controller/FileController.testGroupFile</Message></String><SourceLine endBytecode='19' classname='easyupload.controller.FileController' start='226' end='226' sourcepath='easyupload/controller/FileController.java' sourcefile='FileController.java' startBytecode='19'><Message>At FileController.java:[line 226]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='ac2b826b9ee1031cf0cc83ee0b07c633' cweid='22' rank='12' abbrev='SECPTI' category='SECURITY' priority='2' type='PATH_TRAVERSAL_IN' instanceOccurrenceMax='0'><ShortMessage>Potential Path Traversal (file read)</ShortMessage><LongMessage>java/io/File.&lt;init&gt;(Ljava/lang/String;)V reads a file whose location might be specified by user input</LongMessage><Class classname='easyupload.controller.FileController' primary='true'><SourceLine classname='easyupload.controller.FileController' start='54' end='297' sourcepath='easyupload/controller/FileController.java' sourcefile='FileController.java'><Message>At FileController.java:[lines 54-297]</Message></SourceLine><Message>In class easyupload.controller.FileController</Message></Class><Method isStatic='false' classname='easyupload.controller.FileController' signature='(Ljava/lang/String;Lorg/springframework/web/multipart/MultipartHttpServletRequest;)Lorg/springframework/http/ResponseEntity;' name='uploadFile' primary='true'><SourceLine endBytecode='766' classname='easyupload.controller.FileController' start='98' end='141' sourcepath='easyupload/controller/FileController.java' sourcefile='FileController.java' startBytecode='0'></SourceLine><Message>In method easyupload.controller.FileController.uploadFile(String, MultipartHttpServletRequest)</Message></Method><SourceLine endBytecode='62' classname='easyupload.controller.FileController' start='106' end='106' sourcepath='easyupload/controller/FileController.java' sourcefile='FileController.java' startBytecode='62' primary='true'><Message>At FileController.java:[line 106]</Message></SourceLine><String role='Sink method' value='java/io/File.&lt;init&gt;(Ljava/lang/String;)V'><Message>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='java/io/File.separator'><Message>Unknown source java/io/File.separator</Message></String><String role='Unknown source' value='easyupload/controller/FileController.baseDir'><Message>Unknown source easyupload/controller/FileController.baseDir</Message></String><String role='Unknown source' value='easyupload/controller/FileController.generateUuid()Ljava/lang/String;'><Message>Unknown source easyupload/controller/FileController.generateUuid()Ljava/lang/String;</Message></String><SourceLine endBytecode='29' classname='easyupload.controller.FileController' start='102' end='102' sourcepath='easyupload/controller/FileController.java' sourcefile='FileController.java' startBytecode='29'><Message>At FileController.java:[line 102]</Message></SourceLine><SourceLine endBytecode='38' classname='easyupload.controller.FileController' start='105' end='105' sourcepath='easyupload/controller/FileController.java' sourcefile='FileController.java' startBytecode='38'><Message>At FileController.java:[line 105]</Message></SourceLine><SourceLine endBytecode='48' classname='easyupload.controller.FileController' start='106' end='106' sourcepath='easyupload/controller/FileController.java' sourcefile='FileController.java' startBytecode='48'><Message>At FileController.java:[line 106]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='d58a84024230475005284d2ba00176a3' cweid='330' rank='12' abbrev='SECPR' category='SECURITY' priority='2' type='PREDICTABLE_RANDOM' instanceOccurrenceMax='0'><ShortMessage>Predictable pseudorandom number generator</ShortMessage><LongMessage>The use of java.lang.Math.random() is predictable</LongMessage><Class classname='easyupload.controller.FileController' primary='true'><SourceLine classname='easyupload.controller.FileController' start='54' end='297' sourcepath='easyupload/controller/FileController.java' sourcefile='FileController.java'><Message>At FileController.java:[lines 54-297]</Message></SourceLine><Message>In class easyupload.controller.FileController</Message></Class><Method isStatic='false' classname='easyupload.controller.FileController' signature='()Ljava/lang/String;' name='generateUuid' primary='true'><SourceLine endBytecode='139' classname='easyupload.controller.FileController' start='78' end='85' sourcepath='easyupload/controller/FileController.java' sourcefile='FileController.java' startBytecode='0'></SourceLine><Message>In method easyupload.controller.FileController.generateUuid()</Message></Method><SourceLine endBytecode='30' classname='easyupload.controller.FileController' start='84' end='84' sourcepath='easyupload/controller/FileController.java' sourcefile='FileController.java' startBytecode='30' primary='true'><Message>At FileController.java:[line 84]</Message></SourceLine><String value='java.lang.Math.random()'><Message>Value java.lang.Math.random()</Message></String></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='b8fe6597a0cb297220e697504bd71092' rank='15' abbrev='SECSC' category='SECURITY' priority='3' type='SPRING_ENDPOINT' instanceOccurrenceMax='0'><ShortMessage>Found Spring endpoint</ShortMessage><LongMessage>easyupload.controller.FileController is a Spring endpoint (Controller)</LongMessage><Class classname='easyupload.controller.FileController' primary='true'><SourceLine classname='easyupload.controller.FileController' start='54' end='297' sourcepath='easyupload/controller/FileController.java' sourcefile='FileController.java'><Message>At FileController.java:[lines 54-297]</Message></SourceLine><Message>In class easyupload.controller.FileController</Message></Class><Method isStatic='false' classname='easyupload.controller.FileController' signature='()Ljava/lang/String;' name='generateUuid' primary='true'><SourceLine endBytecode='139' classname='easyupload.controller.FileController' start='78' end='85' sourcepath='easyupload/controller/FileController.java' sourcefile='FileController.java' startBytecode='0'></SourceLine><Message>In method easyupload.controller.FileController.generateUuid()</Message></Method><SourceLine synthetic='true' endBytecode='139' classname='easyupload.controller.FileController' start='78' end='85' sourcepath='easyupload/controller/FileController.java' sourcefile='FileController.java' startBytecode='0'><Message>At FileController.java:[lines 78-85]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='a8eb31621b5679685c9e2e87d5c34e75' rank='15' abbrev='SECSC' category='SECURITY' priority='3' type='SPRING_ENDPOINT' instanceOccurrenceMax='0'><ShortMessage>Found Spring endpoint</ShortMessage><LongMessage>easyupload.controller.FileController is a Spring endpoint (Controller)</LongMessage><Class classname='easyupload.controller.FileController' primary='true'><SourceLine classname='easyupload.controller.FileController' start='54' end='297' sourcepath='easyupload/controller/FileController.java' sourcefile='FileController.java'><Message>At FileController.java:[lines 54-297]</Message></SourceLine><Message>In class easyupload.controller.FileController</Message></Class><Method isStatic='false' classname='easyupload.controller.FileController' signature='(III)Ljava/lang/String;' name='getHistory' primary='true'><SourceLine endBytecode='322' classname='easyupload.controller.FileController' start='148' end='165' sourcepath='easyupload/controller/FileController.java' sourcefile='FileController.java' startBytecode='0'></SourceLine><Message>In method easyupload.controller.FileController.getHistory(int, int, int)</Message></Method><SourceLine synthetic='true' endBytecode='322' classname='easyupload.controller.FileController' start='148' end='165' sourcepath='easyupload/controller/FileController.java' sourcefile='FileController.java' startBytecode='0'><Message>At FileController.java:[lines 148-165]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='1d2da21d49d4c3b78d01b2de462462e' rank='15' abbrev='SECSC' category='SECURITY' priority='3' type='SPRING_ENDPOINT' instanceOccurrenceMax='0'><ShortMessage>Found Spring endpoint</ShortMessage><LongMessage>easyupload.controller.FileController is a Spring endpoint (Controller)</LongMessage><Class classname='easyupload.controller.FileController' primary='true'><SourceLine classname='easyupload.controller.FileController' start='54' end='297' sourcepath='easyupload/controller/FileController.java' sourcefile='FileController.java'><Message>At FileController.java:[lines 54-297]</Message></SourceLine><Message>In class easyupload.controller.FileController</Message></Class><Method isStatic='false' classname='easyupload.controller.FileController' signature='(Ljava/lang/String;)Ljava/lang/String;' name='getSelectedTestGroups' primary='true'><SourceLine endBytecode='287' classname='easyupload.controller.FileController' start='202' end='216' sourcepath='easyupload/controller/FileController.java' sourcefile='FileController.java' startBytecode='0'></SourceLine><Message>In method easyupload.controller.FileController.getSelectedTestGroups(String)</Message></Method><SourceLine synthetic='true' endBytecode='287' classname='easyupload.controller.FileController' start='202' end='216' sourcepath='easyupload/controller/FileController.java' sourcefile='FileController.java' startBytecode='0'><Message>At FileController.java:[lines 202-216]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='c1880485e1b0af852bf88fde47702e9e' rank='15' abbrev='SECSC' category='SECURITY' priority='3' type='SPRING_ENDPOINT' instanceOccurrenceMax='0'><ShortMessage>Found Spring endpoint</ShortMessage><LongMessage>easyupload.controller.FileController is a Spring endpoint (Controller)</LongMessage><Class classname='easyupload.controller.FileController' primary='true'><SourceLine classname='easyupload.controller.FileController' start='54' end='297' sourcepath='easyupload/controller/FileController.java' sourcefile='FileController.java'><Message>At FileController.java:[lines 54-297]</Message></SourceLine><Message>In class easyupload.controller.FileController</Message></Class><Method isStatic='false' classname='easyupload.controller.FileController' signature='(Ljava/lang/String;)Ljava/lang/String;' name='getStatus' primary='true'><SourceLine endBytecode='60' classname='easyupload.controller.FileController' start='91' end='91' sourcepath='easyupload/controller/FileController.java' sourcefile='FileController.java' startBytecode='0'></SourceLine><Message>In method easyupload.controller.FileController.getStatus(String)</Message></Method><SourceLine synthetic='true' endBytecode='60' classname='easyupload.controller.FileController' start='91' end='91' sourcepath='easyupload/controller/FileController.java' sourcefile='FileController.java' startBytecode='0'><Message>At FileController.java:[line 91]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='2550dfad3abbe92af86b88e36427a1c1' rank='15' abbrev='SECSC' category='SECURITY' priority='3' type='SPRING_ENDPOINT' instanceOccurrenceMax='0'><ShortMessage>Found Spring endpoint</ShortMessage><LongMessage>easyupload.controller.FileController is a Spring endpoint (Controller)</LongMessage><Class classname='easyupload.controller.FileController' primary='true'><SourceLine classname='easyupload.controller.FileController' start='54' end='297' sourcepath='easyupload/controller/FileController.java' sourcefile='FileController.java'><Message>At FileController.java:[lines 54-297]</Message></SourceLine><Message>In class easyupload.controller.FileController</Message></Class><Method isStatic='false' classname='easyupload.controller.FileController' signature='()Ljava/lang/String;' name='getTestGroups' primary='true'><SourceLine endBytecode='371' classname='easyupload.controller.FileController' start='174' end='193' sourcepath='easyupload/controller/FileController.java' sourcefile='FileController.java' startBytecode='0'></SourceLine><Message>In method easyupload.controller.FileController.getTestGroups()</Message></Method><SourceLine synthetic='true' endBytecode='371' classname='easyupload.controller.FileController' start='174' end='193' sourcepath='easyupload/controller/FileController.java' sourcefile='FileController.java' startBytecode='0'><Message>At FileController.java:[lines 174-193]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='a8e62980841b2bccea6f05cc979b61d6' rank='15' abbrev='SECSC' category='SECURITY' priority='3' type='SPRING_ENDPOINT' instanceOccurrenceMax='0'><ShortMessage>Found Spring endpoint</ShortMessage><LongMessage>easyupload.controller.FileController is a Spring endpoint (Controller)</LongMessage><Class classname='easyupload.controller.FileController' primary='true'><SourceLine classname='easyupload.controller.FileController' start='54' end='297' sourcepath='easyupload/controller/FileController.java' sourcefile='FileController.java'><Message>At FileController.java:[lines 54-297]</Message></SourceLine><Message>In class easyupload.controller.FileController</Message></Class><Method isStatic='false' classname='easyupload.controller.FileController' signature='(Ljava/lang/String;Lorg/springframework/web/multipart/MultipartHttpServletRequest;)Lorg/springframework/http/ResponseEntity;' name='uploadFile' primary='true'><SourceLine endBytecode='766' classname='easyupload.controller.FileController' start='98' end='141' sourcepath='easyupload/controller/FileController.java' sourcefile='FileController.java' startBytecode='0'></SourceLine><Message>In method easyupload.controller.FileController.uploadFile(String, MultipartHttpServletRequest)</Message></Method><SourceLine synthetic='true' endBytecode='766' classname='easyupload.controller.FileController' start='98' end='141' sourcepath='easyupload/controller/FileController.java' sourcefile='FileController.java' startBytecode='0'><Message>At FileController.java:[lines 98-141]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='b1d546e09ff63db0cb5c4057503ef4fb' cweid='117' rank='12' abbrev='SECCRLFLOG' category='SECURITY' priority='2' type='CRLF_INJECTION_LOGS' instanceOccurrenceMax='0'><ShortMessage>Potential CRLF Injection for logs</ShortMessage><LongMessage>This use of org/slf4j/Logger.info(Ljava/lang/String;)V might be used to include CRLF characters into log messages</LongMessage><Class classname='easyupload.controller.HelpController' primary='true'><SourceLine classname='easyupload.controller.HelpController' start='41' end='230' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java'><Message>At HelpController.java:[lines 41-230]</Message></SourceLine><Message>In class easyupload.controller.HelpController</Message></Class><Method isStatic='false' classname='easyupload.controller.HelpController' signature='(Ljava/lang/String;Ljavax/servlet/http/HttpServletResponse;)Lorg/springframework/core/io/FileSystemResource;' name='downloadSampleFile' primary='true'><SourceLine endBytecode='314' classname='easyupload.controller.HelpController' start='212' end='224' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='0'></SourceLine><Message>In method easyupload.controller.HelpController.downloadSampleFile(String, HttpServletResponse)</Message></Method><SourceLine endBytecode='58' classname='easyupload.controller.HelpController' start='213' end='213' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='58' primary='true'><Message>At HelpController.java:[line 213]</Message></SourceLine><String role='Sink method' value='org/slf4j/Logger.info(Ljava/lang/String;)V'><Message>Sink method org/slf4j/Logger.info(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='java/io/File.separator'><Message>Unknown source java/io/File.separator</Message></String><String role='Unknown source' value='easyupload/controller/HelpController.sampledir'><Message>Unknown source easyupload/controller/HelpController.sampledir</Message></String><SourceLine endBytecode='39' classname='easyupload.controller.HelpController' start='213' end='213' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='39'><Message>At HelpController.java:[line 213]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='59b37d51543f45e7a8b3552778edbc7e' cweid='117' rank='12' abbrev='SECCRLFLOG' category='SECURITY' priority='2' type='CRLF_INJECTION_LOGS' instanceOccurrenceMax='0'><ShortMessage>Potential CRLF Injection for logs</ShortMessage><LongMessage>This use of org/slf4j/Logger.info(Ljava/lang/String;)V might be used to include CRLF characters into log messages</LongMessage><Class classname='easyupload.controller.HelpController' primary='true'><SourceLine classname='easyupload.controller.HelpController' start='41' end='230' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java'><Message>At HelpController.java:[lines 41-230]</Message></SourceLine><Message>In class easyupload.controller.HelpController</Message></Class><Method isStatic='false' classname='easyupload.controller.HelpController' signature='(Ljava/lang/String;Ljavax/servlet/http/HttpServletResponse;)Lorg/springframework/core/io/FileSystemResource;' name='downloadSampleFile' primary='true'><SourceLine endBytecode='314' classname='easyupload.controller.HelpController' start='212' end='224' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='0'></SourceLine><Message>In method easyupload.controller.HelpController.downloadSampleFile(String, HttpServletResponse)</Message></Method><SourceLine endBytecode='128' classname='easyupload.controller.HelpController' start='222' end='222' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='128' primary='true'><Message>At HelpController.java:[line 222]</Message></SourceLine><String role='Sink method' value='org/slf4j/Logger.info(Ljava/lang/String;)V'><Message>Sink method org/slf4j/Logger.info(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><SourceLine endBytecode='84' classname='easyupload.controller.HelpController' start='217' end='217' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='84'><Message>At HelpController.java:[line 217]</Message></SourceLine><SourceLine endBytecode='122' classname='easyupload.controller.HelpController' start='222' end='222' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='122'><Message>At HelpController.java:[line 222]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='5819f90a0e31a17eacfe6f872784ccf8' cweid='117' rank='12' abbrev='SECCRLFLOG' category='SECURITY' priority='2' type='CRLF_INJECTION_LOGS' instanceOccurrenceMax='0'><ShortMessage>Potential CRLF Injection for logs</ShortMessage><LongMessage>This use of org/slf4j/Logger.info(Ljava/lang/String;)V might be used to include CRLF characters into log messages</LongMessage><Class classname='easyupload.controller.HelpController' primary='true'><SourceLine classname='easyupload.controller.HelpController' start='41' end='230' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java'><Message>At HelpController.java:[lines 41-230]</Message></SourceLine><Message>In class easyupload.controller.HelpController</Message></Class><Method isStatic='false' classname='easyupload.controller.HelpController' signature='(Ljava/lang/String;Ljavax/servlet/http/HttpServletResponse;)Lorg/springframework/core/io/FileSystemResource;' name='downloadSupportFile' primary='true'><SourceLine endBytecode='314' classname='easyupload.controller.HelpController' start='194' end='206' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='0'></SourceLine><Message>In method easyupload.controller.HelpController.downloadSupportFile(String, HttpServletResponse)</Message></Method><SourceLine endBytecode='58' classname='easyupload.controller.HelpController' start='195' end='195' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='58' primary='true'><Message>At HelpController.java:[line 195]</Message></SourceLine><String role='Sink method' value='org/slf4j/Logger.info(Ljava/lang/String;)V'><Message>Sink method org/slf4j/Logger.info(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='java/io/File.separator'><Message>Unknown source java/io/File.separator</Message></String><String role='Unknown source' value='easyupload/controller/HelpController.supportdir'><Message>Unknown source easyupload/controller/HelpController.supportdir</Message></String><SourceLine endBytecode='39' classname='easyupload.controller.HelpController' start='195' end='195' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='39'><Message>At HelpController.java:[line 195]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='899fe2a1b9c494c210540a399f971dac' cweid='117' rank='12' abbrev='SECCRLFLOG' category='SECURITY' priority='2' type='CRLF_INJECTION_LOGS' instanceOccurrenceMax='0'><ShortMessage>Potential CRLF Injection for logs</ShortMessage><LongMessage>This use of org/slf4j/Logger.info(Ljava/lang/String;)V might be used to include CRLF characters into log messages</LongMessage><Class classname='easyupload.controller.HelpController' primary='true'><SourceLine classname='easyupload.controller.HelpController' start='41' end='230' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java'><Message>At HelpController.java:[lines 41-230]</Message></SourceLine><Message>In class easyupload.controller.HelpController</Message></Class><Method isStatic='false' classname='easyupload.controller.HelpController' signature='(Ljava/lang/String;Ljavax/servlet/http/HttpServletResponse;)Lorg/springframework/core/io/FileSystemResource;' name='downloadSupportFile' primary='true'><SourceLine endBytecode='314' classname='easyupload.controller.HelpController' start='194' end='206' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='0'></SourceLine><Message>In method easyupload.controller.HelpController.downloadSupportFile(String, HttpServletResponse)</Message></Method><SourceLine endBytecode='128' classname='easyupload.controller.HelpController' start='204' end='204' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='128' primary='true'><Message>At HelpController.java:[line 204]</Message></SourceLine><String role='Sink method' value='org/slf4j/Logger.info(Ljava/lang/String;)V'><Message>Sink method org/slf4j/Logger.info(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><SourceLine endBytecode='84' classname='easyupload.controller.HelpController' start='199' end='199' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='84'><Message>At HelpController.java:[line 199]</Message></SourceLine><SourceLine endBytecode='112' classname='easyupload.controller.HelpController' start='204' end='204' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='112'><Message>At HelpController.java:[line 204]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='8b2dcceeb9ac3bfa5a80f5b76063171c' cweid='117' rank='15' abbrev='SECCRLFLOG' category='SECURITY' priority='3' type='CRLF_INJECTION_LOGS' instanceOccurrenceMax='0'><ShortMessage>Potential CRLF Injection for logs</ShortMessage><LongMessage>This use of org/slf4j/Logger.error(Ljava/lang/String;)V might be used to include CRLF characters into log messages</LongMessage><Class classname='easyupload.controller.HelpController' primary='true'><SourceLine classname='easyupload.controller.HelpController' start='41' end='230' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java'><Message>At HelpController.java:[lines 41-230]</Message></SourceLine><Message>In class easyupload.controller.HelpController</Message></Class><Method isStatic='false' classname='easyupload.controller.HelpController' signature='(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;' name='fetchFeatureHelpFileIfAny' primary='true'><SourceLine endBytecode='468' classname='easyupload.controller.HelpController' start='173' end='188' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='0'></SourceLine><Message>In method easyupload.controller.HelpController.fetchFeatureHelpFileIfAny(String, String)</Message></Method><SourceLine endBytecode='140' classname='easyupload.controller.HelpController' start='184' end='184' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='140' primary='true'><Message>At HelpController.java:[line 184]</Message></SourceLine><String role='Sink method' value='org/slf4j/Logger.error(Ljava/lang/String;)V'><Message>Sink method org/slf4j/Logger.error(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='java/io/IOException.getMessage()Ljava/lang/String;'><Message>Unknown source java/io/IOException.getMessage()Ljava/lang/String;</Message></String><SourceLine endBytecode='137' classname='easyupload.controller.HelpController' start='184' end='184' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='137'><Message>At HelpController.java:[line 184]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='f79e4bd7e39aa07f07ebb7f8b85eb802' cweid='117' rank='15' abbrev='SECCRLFLOG' category='SECURITY' priority='3' type='CRLF_INJECTION_LOGS' instanceOccurrenceMax='0'><ShortMessage>Potential CRLF Injection for logs</ShortMessage><LongMessage>This use of org/slf4j/Logger.error(Ljava/lang/String;)V might be used to include CRLF characters into log messages</LongMessage><Class classname='easyupload.controller.HelpController' primary='true'><SourceLine classname='easyupload.controller.HelpController' start='41' end='230' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java'><Message>At HelpController.java:[lines 41-230]</Message></SourceLine><Message>In class easyupload.controller.HelpController</Message></Class><Method isStatic='false' classname='easyupload.controller.HelpController' signature='([Ljava/io/File;)Ljava/util/List;' name='getFeatureFilesDetails' primary='true'><SourceLine endBytecode='526' classname='easyupload.controller.HelpController' start='147' end='161' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='0'></SourceLine><Message>In method easyupload.controller.HelpController.getFeatureFilesDetails(File[])</Message></Method><SourceLine endBytecode='178' classname='easyupload.controller.HelpController' start='158' end='158' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='178' primary='true'><Message>At HelpController.java:[line 158]</Message></SourceLine><String role='Sink method' value='org/slf4j/Logger.error(Ljava/lang/String;)V'><Message>Sink method org/slf4j/Logger.error(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='java/io/IOException.getMessage()Ljava/lang/String;'><Message>Unknown source java/io/IOException.getMessage()Ljava/lang/String;</Message></String><SourceLine endBytecode='175' classname='easyupload.controller.HelpController' start='158' end='158' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='175'><Message>At HelpController.java:[line 158]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='a336848aadaeede128bf691580b3f0e3' cweid='117' rank='15' abbrev='SECCRLFLOG' category='SECURITY' priority='3' type='CRLF_INJECTION_LOGS' instanceOccurrenceMax='0'><ShortMessage>Potential CRLF Injection for logs</ShortMessage><LongMessage>This use of org/slf4j/Logger.info(Ljava/lang/String;)V might be used to include CRLF characters into log messages</LongMessage><Class classname='easyupload.controller.HelpController' primary='true'><SourceLine classname='easyupload.controller.HelpController' start='41' end='230' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java'><Message>At HelpController.java:[lines 41-230]</Message></SourceLine><Message>In class easyupload.controller.HelpController</Message></Class><Method isStatic='false' classname='easyupload.controller.HelpController' signature='()Ljava/lang/String;' name='getFileList' primary='true'><SourceLine endBytecode='329' classname='easyupload.controller.HelpController' start='53' end='72' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='0'></SourceLine><Message>In method easyupload.controller.HelpController.getFileList()</Message></Method><SourceLine endBytecode='81' classname='easyupload.controller.HelpController' start='67' end='67' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='81' primary='true'><Message>At HelpController.java:[line 67]</Message></SourceLine><String role='Sink method' value='org/slf4j/Logger.info(Ljava/lang/String;)V'><Message>Sink method org/slf4j/Logger.info(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='com/fasterxml/jackson/databind/ObjectMapper.writeValueAsString(Ljava/lang/Object;)Ljava/lang/String;'><Message>Unknown source com/fasterxml/jackson/databind/ObjectMapper.writeValueAsString(Ljava/lang/Object;)Ljava/lang/String;</Message></String><SourceLine endBytecode='72' classname='easyupload.controller.HelpController' start='66' end='66' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='72'><Message>At HelpController.java:[line 66]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='7c0026f58ca707565e07586756f45ceb' cweid='117' rank='15' abbrev='SECCRLFLOG' category='SECURITY' priority='3' type='CRLF_INJECTION_LOGS' instanceOccurrenceMax='0'><ShortMessage>Potential CRLF Injection for logs</ShortMessage><LongMessage>This use of org/slf4j/Logger.error(Ljava/lang/String;)V might be used to include CRLF characters into log messages</LongMessage><Class classname='easyupload.controller.HelpController' primary='true'><SourceLine classname='easyupload.controller.HelpController' start='41' end='230' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java'><Message>At HelpController.java:[lines 41-230]</Message></SourceLine><Message>In class easyupload.controller.HelpController</Message></Class><Method isStatic='false' classname='easyupload.controller.HelpController' signature='()Ljava/lang/String;' name='getFileList' primary='true'><SourceLine endBytecode='329' classname='easyupload.controller.HelpController' start='53' end='72' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='0'></SourceLine><Message>In method easyupload.controller.HelpController.getFileList()</Message></Method><SourceLine endBytecode='100' classname='easyupload.controller.HelpController' start='69' end='69' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='100' primary='true'><Message>At HelpController.java:[line 69]</Message></SourceLine><String role='Sink method' value='org/slf4j/Logger.error(Ljava/lang/String;)V'><Message>Sink method org/slf4j/Logger.error(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='com/fasterxml/jackson/core/JsonProcessingException.getMessage()Ljava/lang/String;'><Message>Unknown source com/fasterxml/jackson/core/JsonProcessingException.getMessage()Ljava/lang/String;</Message></String><SourceLine endBytecode='97' classname='easyupload.controller.HelpController' start='69' end='69' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='97'><Message>At HelpController.java:[line 69]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='67b5e5aaed94ecda67a044c7cbce1911' cweid='117' rank='15' abbrev='SECCRLFLOG' category='SECURITY' priority='3' type='CRLF_INJECTION_LOGS' instanceOccurrenceMax='0'><ShortMessage>Potential CRLF Injection for logs</ShortMessage><LongMessage>This use of org/slf4j/Logger.error(Ljava/lang/String;)V might be used to include CRLF characters into log messages</LongMessage><Class classname='easyupload.controller.HelpController' primary='true'><SourceLine classname='easyupload.controller.HelpController' start='41' end='230' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java'><Message>At HelpController.java:[lines 41-230]</Message></SourceLine><Message>In class easyupload.controller.HelpController</Message></Class><Method isStatic='false' classname='easyupload.controller.HelpController' signature='(Ljava/nio/file/Path;)Ljava/util/List;' name='listAllFolder' primary='true'><SourceLine endBytecode='487' classname='easyupload.controller.HelpController' start='107' end='124' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='0'></SourceLine><Message>In method easyupload.controller.HelpController.listAllFolder(Path)</Message></Method><SourceLine endBytecode='175' classname='easyupload.controller.HelpController' start='121' end='121' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='175' primary='true'><Message>At HelpController.java:[line 121]</Message></SourceLine><String role='Sink method' value='org/slf4j/Logger.error(Ljava/lang/String;)V'><Message>Sink method org/slf4j/Logger.error(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='java/io/IOException.getMessage()Ljava/lang/String;'><Message>Unknown source java/io/IOException.getMessage()Ljava/lang/String;</Message></String><SourceLine endBytecode='172' classname='easyupload.controller.HelpController' start='121' end='121' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='172'><Message>At HelpController.java:[line 121]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='a49b38416fd754b70d8e55fd4b718766' cweid='117' rank='15' abbrev='SECCRLFLOG' category='SECURITY' priority='3' type='CRLF_INJECTION_LOGS' instanceOccurrenceMax='0'><ShortMessage>Potential CRLF Injection for logs</ShortMessage><LongMessage>This use of org/slf4j/Logger.info(Ljava/lang/String;)V might be used to include CRLF characters into log messages</LongMessage><Class classname='easyupload.controller.HelpController' primary='true'><SourceLine classname='easyupload.controller.HelpController' start='41' end='230' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java'><Message>At HelpController.java:[lines 41-230]</Message></SourceLine><Message>In class easyupload.controller.HelpController</Message></Class><Method isStatic='false' classname='easyupload.controller.HelpController' signature='(Ljava/io/File;Ljava/io/File;)Ljava/lang/String;' name='resolvePath' primary='true'><SourceLine endBytecode='197' classname='easyupload.controller.HelpController' start='165' end='169' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='0'></SourceLine><Message>In method easyupload.controller.HelpController.resolvePath(File, File)</Message></Method><SourceLine endBytecode='77' classname='easyupload.controller.HelpController' start='168' end='168' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='77' primary='true'><Message>At HelpController.java:[line 168]</Message></SourceLine><String role='Sink method' value='org/slf4j/Logger.info(Ljava/lang/String;)V'><Message>Sink method org/slf4j/Logger.info(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='java/nio/file/Path.relativize(Ljava/nio/file/Path;)Ljava/nio/file/Path;'><Message>Unknown source java/nio/file/Path.relativize(Ljava/nio/file/Path;)Ljava/nio/file/Path;</Message></String><SourceLine endBytecode='58' classname='easyupload.controller.HelpController' start='87' end='87' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='58'><Message>At HelpController.java:[line 87]</Message></SourceLine><SourceLine endBytecode='96' classname='easyupload.controller.HelpController' start='88' end='88' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='96'><Message>At HelpController.java:[line 88]</Message></SourceLine><SourceLine endBytecode='44' classname='easyupload.controller.HelpController' start='135' end='135' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='44'><Message>At HelpController.java:[line 135]</Message></SourceLine><SourceLine endBytecode='52' classname='easyupload.controller.HelpController' start='136' end='136' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='52'><Message>At HelpController.java:[line 136]</Message></SourceLine><SourceLine endBytecode='120' classname='easyupload.controller.HelpController' start='156' end='156' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='120'><Message>At HelpController.java:[line 156]</Message></SourceLine><SourceLine endBytecode='28' classname='easyupload.controller.HelpController' start='167' end='167' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='28'><Message>At HelpController.java:[line 167]</Message></SourceLine><SourceLine endBytecode='52' classname='easyupload.controller.HelpController' start='168' end='168' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='52'><Message>At HelpController.java:[line 168]</Message></SourceLine><SourceLine endBytecode='27' classname='easyupload.controller.HelpController' start='229' end='229' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='27'><Message>At HelpController.java:[line 229]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='a2818709650d292ca5891ead2705785' cweid='117' rank='15' abbrev='SECCRLFLOG' category='SECURITY' priority='3' type='CRLF_INJECTION_LOGS' instanceOccurrenceMax='0'><ShortMessage>Potential CRLF Injection for logs</ShortMessage><LongMessage>This use of org/slf4j/Logger.error(Ljava/lang/String;)V might be used to include CRLF characters into log messages</LongMessage><Class classname='easyupload.controller.HelpController' primary='true'><SourceLine classname='easyupload.controller.HelpController' start='41' end='230' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java'><Message>At HelpController.java:[lines 41-230]</Message></SourceLine><Message>In class easyupload.controller.HelpController</Message></Class><Method isStatic='false' classname='easyupload.controller.HelpController' signature='()Ljava/lang/String;' name='sampleFeatureFiles' primary='true'><SourceLine endBytecode='289' classname='easyupload.controller.HelpController' start='130' end='143' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='0'></SourceLine><Message>In method easyupload.controller.HelpController.sampleFeatureFiles()</Message></Method><SourceLine endBytecode='78' classname='easyupload.controller.HelpController' start='141' end='141' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='78' primary='true'><Message>At HelpController.java:[line 141]</Message></SourceLine><String role='Sink method' value='org/slf4j/Logger.error(Ljava/lang/String;)V'><Message>Sink method org/slf4j/Logger.error(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='com/fasterxml/jackson/core/JsonProcessingException.getMessage()Ljava/lang/String;'><Message>Unknown source com/fasterxml/jackson/core/JsonProcessingException.getMessage()Ljava/lang/String;</Message></String><SourceLine endBytecode='75' classname='easyupload.controller.HelpController' start='141' end='141' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='75'><Message>At HelpController.java:[line 141]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='9262e7ada10fc5b3629d3b0923714298' cweid='117' rank='15' abbrev='SECCRLFLOG' category='SECURITY' priority='3' type='CRLF_INJECTION_LOGS' instanceOccurrenceMax='0'><ShortMessage>Potential CRLF Injection for logs</ShortMessage><LongMessage>This use of org/slf4j/Logger.error(Ljava/lang/String;)V might be used to include CRLF characters into log messages</LongMessage><Class classname='easyupload.controller.HelpController' primary='true'><SourceLine classname='easyupload.controller.HelpController' start='41' end='230' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java'><Message>At HelpController.java:[lines 41-230]</Message></SourceLine><Message>In class easyupload.controller.HelpController</Message></Class><Method isStatic='false' classname='easyupload.controller.HelpController' signature='(Ljava/nio/file/Path;)Ljava/util/List;' name='traverseDir' primary='true'><SourceLine endBytecode='455' classname='easyupload.controller.HelpController' start='82' end='96' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='0'></SourceLine><Message>In method easyupload.controller.HelpController.traverseDir(Path)</Message></Method><SourceLine endBytecode='169' classname='easyupload.controller.HelpController' start='93' end='93' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='169' primary='true'><Message>At HelpController.java:[line 93]</Message></SourceLine><String role='Sink method' value='org/slf4j/Logger.error(Ljava/lang/String;)V'><Message>Sink method org/slf4j/Logger.error(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='java/io/IOException.getMessage()Ljava/lang/String;'><Message>Unknown source java/io/IOException.getMessage()Ljava/lang/String;</Message></String><SourceLine endBytecode='166' classname='easyupload.controller.HelpController' start='93' end='93' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='166'><Message>At HelpController.java:[line 93]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='d6b03e35fd1ac7e4582997b281e45277' cweid='113' rank='12' abbrev='SECHRS' category='SECURITY' priority='2' type='HTTP_RESPONSE_SPLITTING' instanceOccurrenceMax='0'><ShortMessage>Potential HTTP Response Splitting</ShortMessage><LongMessage>This use of javax/servlet/http/HttpServletResponse.setHeader(Ljava/lang/String;Ljava/lang/String;)V might be used to include CRLF characters into HTTP headers</LongMessage><Class classname='easyupload.controller.HelpController' primary='true'><SourceLine classname='easyupload.controller.HelpController' start='41' end='230' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java'><Message>At HelpController.java:[lines 41-230]</Message></SourceLine><Message>In class easyupload.controller.HelpController</Message></Class><Method isStatic='false' classname='easyupload.controller.HelpController' signature='(Ljava/lang/String;Ljavax/servlet/http/HttpServletResponse;)Lorg/springframework/core/io/FileSystemResource;' name='downloadSampleFile' primary='true'><SourceLine endBytecode='314' classname='easyupload.controller.HelpController' start='212' end='224' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='0'></SourceLine><Message>In method easyupload.controller.HelpController.downloadSampleFile(String, HttpServletResponse)</Message></Method><SourceLine endBytecode='161' classname='easyupload.controller.HelpController' start='223' end='223' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='161' primary='true'><Message>At HelpController.java:[line 223]</Message></SourceLine><String role='Sink method' value='javax/servlet/http/HttpServletResponse.setHeader(Ljava/lang/String;Ljava/lang/String;)V'><Message>Sink method javax/servlet/http/HttpServletResponse.setHeader(Ljava/lang/String;Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><SourceLine endBytecode='84' classname='easyupload.controller.HelpController' start='217' end='217' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='84'><Message>At HelpController.java:[line 217]</Message></SourceLine><SourceLine endBytecode='155' classname='easyupload.controller.HelpController' start='223' end='223' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='155'><Message>At HelpController.java:[line 223]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='1aa884ee3e2573e14cc78b89871277ce' cweid='113' rank='12' abbrev='SECHRS' category='SECURITY' priority='2' type='HTTP_RESPONSE_SPLITTING' instanceOccurrenceMax='0'><ShortMessage>Potential HTTP Response Splitting</ShortMessage><LongMessage>This use of javax/servlet/http/HttpServletResponse.setHeader(Ljava/lang/String;Ljava/lang/String;)V might be used to include CRLF characters into HTTP headers</LongMessage><Class classname='easyupload.controller.HelpController' primary='true'><SourceLine classname='easyupload.controller.HelpController' start='41' end='230' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java'><Message>At HelpController.java:[lines 41-230]</Message></SourceLine><Message>In class easyupload.controller.HelpController</Message></Class><Method isStatic='false' classname='easyupload.controller.HelpController' signature='(Ljava/lang/String;Ljavax/servlet/http/HttpServletResponse;)Lorg/springframework/core/io/FileSystemResource;' name='downloadSupportFile' primary='true'><SourceLine endBytecode='314' classname='easyupload.controller.HelpController' start='194' end='206' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='0'></SourceLine><Message>In method easyupload.controller.HelpController.downloadSupportFile(String, HttpServletResponse)</Message></Method><SourceLine endBytecode='161' classname='easyupload.controller.HelpController' start='205' end='205' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='161' primary='true'><Message>At HelpController.java:[line 205]</Message></SourceLine><String role='Sink method' value='javax/servlet/http/HttpServletResponse.setHeader(Ljava/lang/String;Ljava/lang/String;)V'><Message>Sink method javax/servlet/http/HttpServletResponse.setHeader(Ljava/lang/String;Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><SourceLine endBytecode='84' classname='easyupload.controller.HelpController' start='199' end='199' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='84'><Message>At HelpController.java:[line 199]</Message></SourceLine><SourceLine endBytecode='150' classname='easyupload.controller.HelpController' start='205' end='205' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='150'><Message>At HelpController.java:[line 205]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='9f3df03cdf6968cc829f91e916175d11' cweid='22' rank='10' abbrev='SECPTI' category='SECURITY' priority='1' type='PATH_TRAVERSAL_IN' instanceOccurrenceMax='0'><ShortMessage>Potential Path Traversal (file read)</ShortMessage><LongMessage>java/io/File.&lt;init&gt;(Ljava/lang/String;)V reads a file whose location might be specified by user input</LongMessage><Class classname='easyupload.controller.HelpController' primary='true'><SourceLine classname='easyupload.controller.HelpController' start='41' end='230' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java'><Message>At HelpController.java:[lines 41-230]</Message></SourceLine><Message>In class easyupload.controller.HelpController</Message></Class><Method isStatic='false' classname='easyupload.controller.HelpController' signature='(Ljava/lang/String;Ljavax/servlet/http/HttpServletResponse;)Lorg/springframework/core/io/FileSystemResource;' name='downloadSampleFile' primary='true'><SourceLine endBytecode='314' classname='easyupload.controller.HelpController' start='212' end='224' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='0'></SourceLine><Message>In method easyupload.controller.HelpController.downloadSampleFile(String, HttpServletResponse)</Message></Method><SourceLine endBytecode='18' classname='easyupload.controller.HelpController' start='212' end='212' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='18' primary='true'><Message>At HelpController.java:[line 212]</Message></SourceLine><String role='Sink method' value='java/io/File.&lt;init&gt;(Ljava/lang/String;)V'><Message>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='java/io/File.separator'><Message>Unknown source java/io/File.separator</Message></String><String role='Unknown source' value='easyupload/controller/HelpController.sampledir'><Message>Unknown source easyupload/controller/HelpController.sampledir</Message></String><SourceLine endBytecode='11' classname='easyupload.controller.HelpController' start='212' end='212' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='11'><Message>At HelpController.java:[line 212]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='36f73c32c17287d8dcedda04276c52a1' cweid='22' rank='10' abbrev='SECPTI' category='SECURITY' priority='1' type='PATH_TRAVERSAL_IN' instanceOccurrenceMax='0'><ShortMessage>Potential Path Traversal (file read)</ShortMessage><LongMessage>java/io/File.&lt;init&gt;(Ljava/lang/String;)V reads a file whose location might be specified by user input</LongMessage><Class classname='easyupload.controller.HelpController' primary='true'><SourceLine classname='easyupload.controller.HelpController' start='41' end='230' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java'><Message>At HelpController.java:[lines 41-230]</Message></SourceLine><Message>In class easyupload.controller.HelpController</Message></Class><Method isStatic='false' classname='easyupload.controller.HelpController' signature='(Ljava/lang/String;Ljavax/servlet/http/HttpServletResponse;)Lorg/springframework/core/io/FileSystemResource;' name='downloadSupportFile' primary='true'><SourceLine endBytecode='314' classname='easyupload.controller.HelpController' start='194' end='206' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='0'></SourceLine><Message>In method easyupload.controller.HelpController.downloadSupportFile(String, HttpServletResponse)</Message></Method><SourceLine endBytecode='18' classname='easyupload.controller.HelpController' start='194' end='194' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='18' primary='true'><Message>At HelpController.java:[line 194]</Message></SourceLine><String role='Sink method' value='java/io/File.&lt;init&gt;(Ljava/lang/String;)V'><Message>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='java/io/File.separator'><Message>Unknown source java/io/File.separator</Message></String><String role='Unknown source' value='easyupload/controller/HelpController.supportdir'><Message>Unknown source easyupload/controller/HelpController.supportdir</Message></String><SourceLine endBytecode='11' classname='easyupload.controller.HelpController' start='194' end='194' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='11'><Message>At HelpController.java:[line 194]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='44ef24d3c93f3c0c81990280e810c793' cweid='22' rank='12' abbrev='SECPTI' category='SECURITY' priority='2' type='PATH_TRAVERSAL_IN' instanceOccurrenceMax='0'><ShortMessage>Potential Path Traversal (file read)</ShortMessage><LongMessage>java/io/File.&lt;init&gt;(Ljava/lang/String;)V reads a file whose location might be specified by user input</LongMessage><Class classname='easyupload.controller.HelpController' primary='true'><SourceLine classname='easyupload.controller.HelpController' start='41' end='230' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java'><Message>At HelpController.java:[lines 41-230]</Message></SourceLine><Message>In class easyupload.controller.HelpController</Message></Class><Method isStatic='false' classname='easyupload.controller.HelpController' signature='(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;' name='fetchFeatureHelpFileIfAny' primary='true'><SourceLine endBytecode='468' classname='easyupload.controller.HelpController' start='173' end='188' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='0'></SourceLine><Message>In method easyupload.controller.HelpController.fetchFeatureHelpFileIfAny(String, String)</Message></Method><SourceLine endBytecode='27' classname='easyupload.controller.HelpController' start='175' end='175' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='27' primary='true'><Message>At HelpController.java:[line 175]</Message></SourceLine><String role='Sink method' value='java/io/File.&lt;init&gt;(Ljava/lang/String;)V'><Message>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='easyupload/controller/HelpController.sampledir'><Message>Unknown source easyupload/controller/HelpController.sampledir</Message></String><SourceLine endBytecode='24' classname='easyupload.controller.HelpController' start='175' end='175' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='24'><Message>At HelpController.java:[line 175]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='b9b67764d7d43183bf30fe5f0d54b487' cweid='22' rank='12' abbrev='SECPTI' category='SECURITY' priority='2' type='PATH_TRAVERSAL_IN' instanceOccurrenceMax='0'><ShortMessage>Potential Path Traversal (file read)</ShortMessage><LongMessage>java/io/File.&lt;init&gt;(Ljava/lang/String;)V reads a file whose location might be specified by user input</LongMessage><Class classname='easyupload.controller.HelpController' primary='true'><SourceLine classname='easyupload.controller.HelpController' start='41' end='230' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java'><Message>At HelpController.java:[lines 41-230]</Message></SourceLine><Message>In class easyupload.controller.HelpController</Message></Class><Method isStatic='false' classname='easyupload.controller.HelpController' signature='([Ljava/io/File;)Ljava/util/List;' name='getFeatureFilesDetails' primary='true'><SourceLine endBytecode='526' classname='easyupload.controller.HelpController' start='147' end='161' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='0'></SourceLine><Message>In method easyupload.controller.HelpController.getFeatureFilesDetails(File[])</Message></Method><SourceLine endBytecode='117' classname='easyupload.controller.HelpController' start='156' end='156' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='117' primary='true'><Message>At HelpController.java:[line 156]</Message></SourceLine><String role='Sink method' value='java/io/File.&lt;init&gt;(Ljava/lang/String;)V'><Message>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='easyupload/controller/HelpController.sampledir'><Message>Unknown source easyupload/controller/HelpController.sampledir</Message></String><SourceLine endBytecode='114' classname='easyupload.controller.HelpController' start='156' end='156' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='114'><Message>At HelpController.java:[line 156]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='232c74a7c46dc07d1dca43649c7e7a74' cweid='22' rank='12' abbrev='SECPTI' category='SECURITY' priority='2' type='PATH_TRAVERSAL_IN' instanceOccurrenceMax='0'><ShortMessage>Potential Path Traversal (file read)</ShortMessage><LongMessage>java/nio/file/Paths.get(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path; reads a file whose location might be specified by user input</LongMessage><Class classname='easyupload.controller.HelpController' primary='true'><SourceLine classname='easyupload.controller.HelpController' start='41' end='230' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java'><Message>At HelpController.java:[lines 41-230]</Message></SourceLine><Message>In class easyupload.controller.HelpController</Message></Class><Method isStatic='false' classname='easyupload.controller.HelpController' signature='()Ljava/lang/String;' name='getFileList' primary='true'><SourceLine endBytecode='329' classname='easyupload.controller.HelpController' start='53' end='72' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='0'></SourceLine><Message>In method easyupload.controller.HelpController.getFileList()</Message></Method><SourceLine endBytecode='38' classname='easyupload.controller.HelpController' start='58' end='58' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='38' primary='true'><Message>At HelpController.java:[line 58]</Message></SourceLine><String role='Sink method' value='java/nio/file/Paths.get(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;'><Message>Sink method java/nio/file/Paths.get(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;</Message></String><String role='Sink parameter' value='1'><Message>Sink parameter 1</Message></String><String role='Unknown source' value='easyupload/controller/HelpController.supportdir'><Message>Unknown source easyupload/controller/HelpController.supportdir</Message></String><SourceLine endBytecode='31' classname='easyupload.controller.HelpController' start='58' end='58' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='31'><Message>At HelpController.java:[line 58]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='1ae8ff547cdb76ed2d0da7819b5ea974' cweid='22' rank='12' abbrev='SECPTI' category='SECURITY' priority='2' type='PATH_TRAVERSAL_IN' instanceOccurrenceMax='1'><ShortMessage>Potential Path Traversal (file read)</ShortMessage><LongMessage>java/nio/file/Paths.get(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path; reads a file whose location might be specified by user input</LongMessage><Class classname='easyupload.controller.HelpController' primary='true'><SourceLine classname='easyupload.controller.HelpController' start='41' end='230' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java'><Message>At HelpController.java:[lines 41-230]</Message></SourceLine><Message>In class easyupload.controller.HelpController</Message></Class><Method isStatic='false' classname='easyupload.controller.HelpController' signature='(Ljava/io/File;Ljava/io/File;)Ljava/lang/String;' name='resolvePath' primary='true'><SourceLine endBytecode='197' classname='easyupload.controller.HelpController' start='165' end='169' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='0'></SourceLine><Message>In method easyupload.controller.HelpController.resolvePath(File, File)</Message></Method><SourceLine endBytecode='8' classname='easyupload.controller.HelpController' start='165' end='165' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='8' primary='true'><Message>At HelpController.java:[line 165]</Message></SourceLine><String role='Sink method' value='java/nio/file/Paths.get(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;'><Message>Sink method java/nio/file/Paths.get(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;</Message></String><String role='Sink parameter' value='1'><Message>Sink parameter 1</Message></String><String role='Unknown source' value='java/io/File.getAbsolutePath()Ljava/lang/String;'><Message>Unknown source java/io/File.getAbsolutePath()Ljava/lang/String;</Message></String><SourceLine endBytecode='1' classname='easyupload.controller.HelpController' start='165' end='165' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='1'><Message>At HelpController.java:[line 165]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='1' instanceHash='1ae8ff547cdb76ed2d0da7819b5ea974' cweid='22' rank='12' abbrev='SECPTI' category='SECURITY' priority='2' type='PATH_TRAVERSAL_IN' instanceOccurrenceMax='1'><ShortMessage>Potential Path Traversal (file read)</ShortMessage><LongMessage>java/nio/file/Paths.get(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path; reads a file whose location might be specified by user input</LongMessage><Class classname='easyupload.controller.HelpController' primary='true'><SourceLine classname='easyupload.controller.HelpController' start='41' end='230' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java'><Message>At HelpController.java:[lines 41-230]</Message></SourceLine><Message>In class easyupload.controller.HelpController</Message></Class><Method isStatic='false' classname='easyupload.controller.HelpController' signature='(Ljava/io/File;Ljava/io/File;)Ljava/lang/String;' name='resolvePath' primary='true'><SourceLine endBytecode='197' classname='easyupload.controller.HelpController' start='165' end='169' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='0'></SourceLine><Message>In method easyupload.controller.HelpController.resolvePath(File, File)</Message></Method><SourceLine endBytecode='20' classname='easyupload.controller.HelpController' start='166' end='166' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='20' primary='true'><Message>At HelpController.java:[line 166]</Message></SourceLine><String role='Sink method' value='java/nio/file/Paths.get(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;'><Message>Sink method java/nio/file/Paths.get(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;</Message></String><String role='Sink parameter' value='1'><Message>Sink parameter 1</Message></String><String role='Unknown source' value='java/io/File.getAbsolutePath()Ljava/lang/String;'><Message>Unknown source java/io/File.getAbsolutePath()Ljava/lang/String;</Message></String><SourceLine endBytecode='13' classname='easyupload.controller.HelpController' start='166' end='166' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='13'><Message>At HelpController.java:[line 166]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='84029684196d4bf93177329565f45edf' cweid='22' rank='12' abbrev='SECPTI' category='SECURITY' priority='2' type='PATH_TRAVERSAL_IN' instanceOccurrenceMax='0'><ShortMessage>Potential Path Traversal (file read)</ShortMessage><LongMessage>java/io/File.&lt;init&gt;(Ljava/lang/String;)V reads a file whose location might be specified by user input</LongMessage><Class classname='easyupload.controller.HelpController' primary='true'><SourceLine classname='easyupload.controller.HelpController' start='41' end='230' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java'><Message>At HelpController.java:[lines 41-230]</Message></SourceLine><Message>In class easyupload.controller.HelpController</Message></Class><Method isStatic='false' classname='easyupload.controller.HelpController' signature='()Ljava/lang/String;' name='sampleFeatureFiles' primary='true'><SourceLine endBytecode='289' classname='easyupload.controller.HelpController' start='130' end='143' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='0'></SourceLine><Message>In method easyupload.controller.HelpController.sampleFeatureFiles()</Message></Method><SourceLine endBytecode='40' classname='easyupload.controller.HelpController' start='135' end='135' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='40' primary='true'><Message>At HelpController.java:[line 135]</Message></SourceLine><String role='Sink method' value='java/io/File.&lt;init&gt;(Ljava/lang/String;)V'><Message>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='easyupload/controller/HelpController.sampledir'><Message>Unknown source easyupload/controller/HelpController.sampledir</Message></String><SourceLine endBytecode='37' classname='easyupload.controller.HelpController' start='135' end='135' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='37'><Message>At HelpController.java:[line 135]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='5321c33dcef75a9134be31ae1e7608b8' cweid='22' rank='12' abbrev='SECPTI' category='SECURITY' priority='2' type='PATH_TRAVERSAL_IN' instanceOccurrenceMax='0'><ShortMessage>Potential Path Traversal (file read)</ShortMessage><LongMessage>java/io/File.&lt;init&gt;(Ljava/lang/String;)V reads a file whose location might be specified by user input</LongMessage><Class classname='easyupload.controller.HelpController' primary='true'><SourceLine classname='easyupload.controller.HelpController' start='41' end='230' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java'><Message>At HelpController.java:[lines 41-230]</Message></SourceLine><Message>In class easyupload.controller.HelpController</Message></Class><Method isStatic='false' classname='easyupload.controller.HelpController' signature='(Ljava/nio/file/Path;)Ljava/util/List;' name='traverseDir' primary='true'><SourceLine endBytecode='455' classname='easyupload.controller.HelpController' start='82' end='96' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='0'></SourceLine><Message>In method easyupload.controller.HelpController.traverseDir(Path)</Message></Method><SourceLine endBytecode='93' classname='easyupload.controller.HelpController' start='88' end='88' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='93' primary='true'><Message>At HelpController.java:[line 88]</Message></SourceLine><String role='Sink method' value='java/io/File.&lt;init&gt;(Ljava/lang/String;)V'><Message>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='easyupload/controller/HelpController.supportdir'><Message>Unknown source easyupload/controller/HelpController.supportdir</Message></String><SourceLine endBytecode='90' classname='easyupload.controller.HelpController' start='88' end='88' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='90'><Message>At HelpController.java:[line 88]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='575a2a9c44f22c5616bad52dc063e042' rank='15' abbrev='SECSC' category='SECURITY' priority='3' type='SPRING_ENDPOINT' instanceOccurrenceMax='0'><ShortMessage>Found Spring endpoint</ShortMessage><LongMessage>easyupload.controller.HelpController is a Spring endpoint (Controller)</LongMessage><Class classname='easyupload.controller.HelpController' primary='true'><SourceLine classname='easyupload.controller.HelpController' start='41' end='230' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java'><Message>At HelpController.java:[lines 41-230]</Message></SourceLine><Message>In class easyupload.controller.HelpController</Message></Class><Method isStatic='false' classname='easyupload.controller.HelpController' signature='(Ljava/lang/String;Ljavax/servlet/http/HttpServletResponse;)Lorg/springframework/core/io/FileSystemResource;' name='downloadSampleFile' primary='true'><SourceLine endBytecode='314' classname='easyupload.controller.HelpController' start='212' end='224' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='0'></SourceLine><Message>In method easyupload.controller.HelpController.downloadSampleFile(String, HttpServletResponse)</Message></Method><SourceLine synthetic='true' endBytecode='314' classname='easyupload.controller.HelpController' start='212' end='224' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='0'><Message>At HelpController.java:[lines 212-224]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='32dc29cbb78a4a2d29da3cdb1eaa3453' rank='15' abbrev='SECSC' category='SECURITY' priority='3' type='SPRING_ENDPOINT' instanceOccurrenceMax='0'><ShortMessage>Found Spring endpoint</ShortMessage><LongMessage>easyupload.controller.HelpController is a Spring endpoint (Controller)</LongMessage><Class classname='easyupload.controller.HelpController' primary='true'><SourceLine classname='easyupload.controller.HelpController' start='41' end='230' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java'><Message>At HelpController.java:[lines 41-230]</Message></SourceLine><Message>In class easyupload.controller.HelpController</Message></Class><Method isStatic='false' classname='easyupload.controller.HelpController' signature='(Ljava/lang/String;Ljavax/servlet/http/HttpServletResponse;)Lorg/springframework/core/io/FileSystemResource;' name='downloadSupportFile' primary='true'><SourceLine endBytecode='314' classname='easyupload.controller.HelpController' start='194' end='206' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='0'></SourceLine><Message>In method easyupload.controller.HelpController.downloadSupportFile(String, HttpServletResponse)</Message></Method><SourceLine synthetic='true' endBytecode='314' classname='easyupload.controller.HelpController' start='194' end='206' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='0'><Message>At HelpController.java:[lines 194-206]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='bae073762ac93b6ca3f96f447e767d8c' rank='15' abbrev='SECSC' category='SECURITY' priority='3' type='SPRING_ENDPOINT' instanceOccurrenceMax='0'><ShortMessage>Found Spring endpoint</ShortMessage><LongMessage>easyupload.controller.HelpController is a Spring endpoint (Controller)</LongMessage><Class classname='easyupload.controller.HelpController' primary='true'><SourceLine classname='easyupload.controller.HelpController' start='41' end='230' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java'><Message>At HelpController.java:[lines 41-230]</Message></SourceLine><Message>In class easyupload.controller.HelpController</Message></Class><Method isStatic='false' classname='easyupload.controller.HelpController' signature='()Ljava/lang/String;' name='getFileList' primary='true'><SourceLine endBytecode='329' classname='easyupload.controller.HelpController' start='53' end='72' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='0'></SourceLine><Message>In method easyupload.controller.HelpController.getFileList()</Message></Method><SourceLine synthetic='true' endBytecode='329' classname='easyupload.controller.HelpController' start='53' end='72' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='0'><Message>At HelpController.java:[lines 53-72]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='1a364ce9c100f2bae12b8b33a2e525e4' rank='15' abbrev='SECSC' category='SECURITY' priority='3' type='SPRING_ENDPOINT' instanceOccurrenceMax='0'><ShortMessage>Found Spring endpoint</ShortMessage><LongMessage>easyupload.controller.HelpController is a Spring endpoint (Controller)</LongMessage><Class classname='easyupload.controller.HelpController' primary='true'><SourceLine classname='easyupload.controller.HelpController' start='41' end='230' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java'><Message>At HelpController.java:[lines 41-230]</Message></SourceLine><Message>In class easyupload.controller.HelpController</Message></Class><Method isStatic='false' classname='easyupload.controller.HelpController' signature='()Ljava/lang/String;' name='sampleFeatureFiles' primary='true'><SourceLine endBytecode='289' classname='easyupload.controller.HelpController' start='130' end='143' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='0'></SourceLine><Message>In method easyupload.controller.HelpController.sampleFeatureFiles()</Message></Method><SourceLine synthetic='true' endBytecode='289' classname='easyupload.controller.HelpController' start='130' end='143' sourcepath='easyupload/controller/HelpController.java' sourcefile='HelpController.java' startBytecode='0'><Message>At HelpController.java:[lines 130-143]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='a93a01e80e3d4664a4041bc8b40d3ebf' cweid='117' rank='15' abbrev='SECCRLFLOG' category='SECURITY' priority='3' type='CRLF_INJECTION_LOGS' instanceOccurrenceMax='0'><ShortMessage>Potential CRLF Injection for logs</ShortMessage><LongMessage>This use of org/slf4j/Logger.info(Ljava/lang/String;)V might be used to include CRLF characters into log messages</LongMessage><Class classname='easyupload.controller.LoginController' primary='true'><SourceLine classname='easyupload.controller.LoginController' start='22' end='75' sourcepath='easyupload/controller/LoginController.java' sourcefile='LoginController.java'><Message>At LoginController.java:[lines 22-75]</Message></SourceLine><Message>In class easyupload.controller.LoginController</Message></Class><Method isStatic='false' classname='easyupload.controller.LoginController' signature='(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Leasyupload/entity/LoginUser;)Ljava/lang/String;' name='loginProcess' primary='true'><SourceLine endBytecode='259' classname='easyupload.controller.LoginController' start='38' end='51' sourcepath='easyupload/controller/LoginController.java' sourcefile='LoginController.java' startBytecode='0'></SourceLine><Message>In method easyupload.controller.LoginController.loginProcess(HttpServletRequest, HttpServletResponse, LoginUser)</Message></Method><SourceLine endBytecode='26' classname='easyupload.controller.LoginController' start='38' end='38' sourcepath='easyupload/controller/LoginController.java' sourcefile='LoginController.java' startBytecode='26' primary='true'><Message>At LoginController.java:[line 38]</Message></SourceLine><String role='Sink method' value='org/slf4j/Logger.info(Ljava/lang/String;)V'><Message>Sink method org/slf4j/Logger.info(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='easyupload/entity/LoginUser.getUsername()Ljava/lang/String;'><Message>Unknown source easyupload/entity/LoginUser.getUsername()Ljava/lang/String;</Message></String><SourceLine endBytecode='23' classname='easyupload.controller.LoginController' start='38' end='38' sourcepath='easyupload/controller/LoginController.java' sourcefile='LoginController.java' startBytecode='23'><Message>At LoginController.java:[line 38]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='71d13952a2d7cc92fe537f90db195d66' rank='15' abbrev='SECSC' category='SECURITY' priority='3' type='SPRING_ENDPOINT' instanceOccurrenceMax='0'><ShortMessage>Found Spring endpoint</ShortMessage><LongMessage>easyupload.controller.LoginController is a Spring endpoint (Controller)</LongMessage><Class classname='easyupload.controller.LoginController' primary='true'><SourceLine classname='easyupload.controller.LoginController' start='22' end='75' sourcepath='easyupload/controller/LoginController.java' sourcefile='LoginController.java'><Message>At LoginController.java:[lines 22-75]</Message></SourceLine><Message>In class easyupload.controller.LoginController</Message></Class><Method isStatic='false' classname='easyupload.controller.LoginController' signature='(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Ljava/lang/String;' name='login' primary='true'><SourceLine endBytecode='193' classname='easyupload.controller.LoginController' start='56' end='67' sourcepath='easyupload/controller/LoginController.java' sourcefile='LoginController.java' startBytecode='0'></SourceLine><Message>In method easyupload.controller.LoginController.login(HttpServletRequest, HttpServletResponse)</Message></Method><SourceLine synthetic='true' endBytecode='193' classname='easyupload.controller.LoginController' start='56' end='67' sourcepath='easyupload/controller/LoginController.java' sourcefile='LoginController.java' startBytecode='0'><Message>At LoginController.java:[lines 56-67]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='5390b4d4ea7f25f7d19170a908da3545' rank='15' abbrev='SECSC' category='SECURITY' priority='3' type='SPRING_ENDPOINT' instanceOccurrenceMax='0'><ShortMessage>Found Spring endpoint</ShortMessage><LongMessage>easyupload.controller.LoginController is a Spring endpoint (Controller)</LongMessage><Class classname='easyupload.controller.LoginController' primary='true'><SourceLine classname='easyupload.controller.LoginController' start='22' end='75' sourcepath='easyupload/controller/LoginController.java' sourcefile='LoginController.java'><Message>At LoginController.java:[lines 22-75]</Message></SourceLine><Message>In class easyupload.controller.LoginController</Message></Class><Method isStatic='false' classname='easyupload.controller.LoginController' signature='(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Leasyupload/entity/LoginUser;)Ljava/lang/String;' name='loginProcess' primary='true'><SourceLine endBytecode='259' classname='easyupload.controller.LoginController' start='38' end='51' sourcepath='easyupload/controller/LoginController.java' sourcefile='LoginController.java' startBytecode='0'></SourceLine><Message>In method easyupload.controller.LoginController.loginProcess(HttpServletRequest, HttpServletResponse, LoginUser)</Message></Method><SourceLine synthetic='true' endBytecode='259' classname='easyupload.controller.LoginController' start='38' end='51' sourcepath='easyupload/controller/LoginController.java' sourcefile='LoginController.java' startBytecode='0'><Message>At LoginController.java:[lines 38-51]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='ac3914fbd0721b585ea2b62987d2a4ff' rank='15' abbrev='SECSC' category='SECURITY' priority='3' type='SPRING_ENDPOINT' instanceOccurrenceMax='0'><ShortMessage>Found Spring endpoint</ShortMessage><LongMessage>easyupload.controller.LoginController is a Spring endpoint (Controller)</LongMessage><Class classname='easyupload.controller.LoginController' primary='true'><SourceLine classname='easyupload.controller.LoginController' start='22' end='75' sourcepath='easyupload/controller/LoginController.java' sourcefile='LoginController.java'><Message>At LoginController.java:[lines 22-75]</Message></SourceLine><Message>In class easyupload.controller.LoginController</Message></Class><Method isStatic='false' classname='easyupload.controller.LoginController' signature='(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Ljava/lang/String;' name='logoutUser' primary='true'><SourceLine endBytecode='109' classname='easyupload.controller.LoginController' start='72' end='75' sourcepath='easyupload/controller/LoginController.java' sourcefile='LoginController.java' startBytecode='0'></SourceLine><Message>In method easyupload.controller.LoginController.logoutUser(HttpServletRequest, HttpServletResponse)</Message></Method><SourceLine synthetic='true' endBytecode='109' classname='easyupload.controller.LoginController' start='72' end='75' sourcepath='easyupload/controller/LoginController.java' sourcefile='LoginController.java' startBytecode='0'><Message>At LoginController.java:[lines 72-75]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='b5b2a48afa818c0b937c0f240e2ea0f1' rank='15' abbrev='SECSC' category='SECURITY' priority='3' type='SPRING_ENDPOINT' instanceOccurrenceMax='0'><ShortMessage>Found Spring endpoint</ShortMessage><LongMessage>easyupload.controller.LoginController is a Spring endpoint (Controller)</LongMessage><Class classname='easyupload.controller.LoginController' primary='true'><SourceLine classname='easyupload.controller.LoginController' start='22' end='75' sourcepath='easyupload/controller/LoginController.java' sourcefile='LoginController.java'><Message>At LoginController.java:[lines 22-75]</Message></SourceLine><Message>In class easyupload.controller.LoginController</Message></Class><Method isStatic='false' classname='easyupload.controller.LoginController' signature='()Ljava/lang/String;' name='uploadFiles' primary='true'><SourceLine endBytecode='59' classname='easyupload.controller.LoginController' start='33' end='34' sourcepath='easyupload/controller/LoginController.java' sourcefile='LoginController.java' startBytecode='0'></SourceLine><Message>In method easyupload.controller.LoginController.uploadFiles()</Message></Method><SourceLine synthetic='true' endBytecode='59' classname='easyupload.controller.LoginController' start='33' end='34' sourcepath='easyupload/controller/LoginController.java' sourcefile='LoginController.java' startBytecode='0'><Message>At LoginController.java:[lines 33-34]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='6b2ef40a053bedbc94f85aae210be802' cweid='501' rank='15' abbrev='SECTBV' category='SECURITY' priority='3' type='TRUST_BOUNDARY_VIOLATION' instanceOccurrenceMax='0'><ShortMessage>Trust Boundary Violation</ShortMessage><LongMessage>The application mixes trusted and untrusted data in session attributes.</LongMessage><Class classname='easyupload.controller.LoginController' primary='true'><SourceLine classname='easyupload.controller.LoginController' start='22' end='75' sourcepath='easyupload/controller/LoginController.java' sourcefile='LoginController.java'><Message>At LoginController.java:[lines 22-75]</Message></SourceLine><Message>In class easyupload.controller.LoginController</Message></Class><Method isStatic='false' classname='easyupload.controller.LoginController' signature='(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Leasyupload/entity/LoginUser;)Ljava/lang/String;' name='loginProcess' primary='true'><SourceLine endBytecode='259' classname='easyupload.controller.LoginController' start='38' end='51' sourcepath='easyupload/controller/LoginController.java' sourcefile='LoginController.java' startBytecode='0'></SourceLine><Message>In method easyupload.controller.LoginController.loginProcess(HttpServletRequest, HttpServletResponse, LoginUser)</Message></Method><SourceLine endBytecode='84' classname='easyupload.controller.LoginController' start='44' end='44' sourcepath='easyupload/controller/LoginController.java' sourcefile='LoginController.java' startBytecode='84' primary='true'><Message>At LoginController.java:[line 44]</Message></SourceLine><String role='Sink method' value='javax/servlet/http/HttpSession.setAttribute(Ljava/lang/String;Ljava/lang/Object;)V'><Message>Sink method javax/servlet/http/HttpSession.setAttribute(Ljava/lang/String;Ljava/lang/Object;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='easyupload/controller/LoginController.sessionAttributes'><Message>Unknown source easyupload/controller/LoginController.sessionAttributes</Message></String><SourceLine endBytecode='81' classname='easyupload.controller.LoginController' start='44' end='44' sourcepath='easyupload/controller/LoginController.java' sourcefile='LoginController.java' startBytecode='81'><Message>At LoginController.java:[line 44]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='19862040a278ffdae373622dc3e05c24' rank='15' abbrev='SECSC' category='SECURITY' priority='3' type='SPRING_ENDPOINT' instanceOccurrenceMax='0'><ShortMessage>Found Spring endpoint</ShortMessage><LongMessage>easyupload.controller.UrlController is a Spring endpoint (Controller)</LongMessage><Class classname='easyupload.controller.UrlController' primary='true'><SourceLine classname='easyupload.controller.UrlController' start='11' end='15' sourcepath='easyupload/controller/UrlController.java' sourcefile='UrlController.java'><Message>At UrlController.java:[lines 11-15]</Message></SourceLine><Message>In class easyupload.controller.UrlController</Message></Class><Method isStatic='false' classname='easyupload.controller.UrlController' signature='(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Ljava/lang/String;' name='redirectToUploadPage' primary='true'><SourceLine endBytecode='64' classname='easyupload.controller.UrlController' start='15' end='15' sourcepath='easyupload/controller/UrlController.java' sourcefile='UrlController.java' startBytecode='0'></SourceLine><Message>In method easyupload.controller.UrlController.redirectToUploadPage(HttpServletRequest, HttpServletResponse)</Message></Method><SourceLine synthetic='true' endBytecode='64' classname='easyupload.controller.UrlController' start='15' end='15' sourcepath='easyupload/controller/UrlController.java' sourcefile='UrlController.java' startBytecode='0'><Message>At UrlController.java:[line 15]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='3ec653fd36264796890e40ad29e6936d' rank='15' abbrev='SECSC' category='SECURITY' priority='3' type='SPRING_ENDPOINT' instanceOccurrenceMax='0'><ShortMessage>Found Spring endpoint</ShortMessage><LongMessage>easyupload.controller.UtilController is a Spring endpoint (Controller)</LongMessage><Class classname='easyupload.controller.UtilController' primary='true'><SourceLine classname='easyupload.controller.UtilController' start='12' end='37' sourcepath='easyupload/controller/UtilController.java' sourcefile='UtilController.java'><Message>At UtilController.java:[lines 12-37]</Message></SourceLine><Message>In class easyupload.controller.UtilController</Message></Class><Method isStatic='false' classname='easyupload.controller.UtilController' signature='()Ljava/lang/String;' name='downloadSampleFile' primary='true'><SourceLine endBytecode='44' classname='easyupload.controller.UtilController' start='37' end='37' sourcepath='easyupload/controller/UtilController.java' sourcefile='UtilController.java' startBytecode='0'></SourceLine><Message>In method easyupload.controller.UtilController.downloadSampleFile()</Message></Method><SourceLine synthetic='true' endBytecode='44' classname='easyupload.controller.UtilController' start='37' end='37' sourcepath='easyupload/controller/UtilController.java' sourcefile='UtilController.java' startBytecode='0'><Message>At UtilController.java:[line 37]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='f70db2f041e5b38d90eea1d9cc8292c4' rank='15' abbrev='SECSC' category='SECURITY' priority='3' type='SPRING_ENDPOINT' instanceOccurrenceMax='0'><ShortMessage>Found Spring endpoint</ShortMessage><LongMessage>easyupload.controller.UtilController is a Spring endpoint (Controller)</LongMessage><Class classname='easyupload.controller.UtilController' primary='true'><SourceLine classname='easyupload.controller.UtilController' start='12' end='37' sourcepath='easyupload/controller/UtilController.java' sourcefile='UtilController.java'><Message>At UtilController.java:[lines 12-37]</Message></SourceLine><Message>In class easyupload.controller.UtilController</Message></Class><Method isStatic='false' classname='easyupload.controller.UtilController' signature='()Ljava/lang/String;' name='downloadSupportFile' primary='true'><SourceLine endBytecode='44' classname='easyupload.controller.UtilController' start='31' end='31' sourcepath='easyupload/controller/UtilController.java' sourcefile='UtilController.java' startBytecode='0'></SourceLine><Message>In method easyupload.controller.UtilController.downloadSupportFile()</Message></Method><SourceLine synthetic='true' endBytecode='44' classname='easyupload.controller.UtilController' start='31' end='31' sourcepath='easyupload/controller/UtilController.java' sourcefile='UtilController.java' startBytecode='0'><Message>At UtilController.java:[line 31]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='ac7d0bd211b0b81fc066a58f19b77889' rank='15' abbrev='SECSC' category='SECURITY' priority='3' type='SPRING_ENDPOINT' instanceOccurrenceMax='0'><ShortMessage>Found Spring endpoint</ShortMessage><LongMessage>easyupload.controller.UtilController is a Spring endpoint (Controller)</LongMessage><Class classname='easyupload.controller.UtilController' primary='true'><SourceLine classname='easyupload.controller.UtilController' start='12' end='37' sourcepath='easyupload/controller/UtilController.java' sourcefile='UtilController.java'><Message>At UtilController.java:[lines 12-37]</Message></SourceLine><Message>In class easyupload.controller.UtilController</Message></Class><Method isStatic='false' classname='easyupload.controller.UtilController' signature='()Ljava/lang/String;' name='getHelp' primary='true'><SourceLine endBytecode='59' classname='easyupload.controller.UtilController' start='24' end='25' sourcepath='easyupload/controller/UtilController.java' sourcefile='UtilController.java' startBytecode='0'></SourceLine><Message>In method easyupload.controller.UtilController.getHelp()</Message></Method><SourceLine synthetic='true' endBytecode='59' classname='easyupload.controller.UtilController' start='24' end='25' sourcepath='easyupload/controller/UtilController.java' sourcefile='UtilController.java' startBytecode='0'><Message>At UtilController.java:[lines 24-25]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='71df51098f0ef388bbecc0fd9a0581b8' rank='15' abbrev='SECSC' category='SECURITY' priority='3' type='SPRING_ENDPOINT' instanceOccurrenceMax='0'><ShortMessage>Found Spring endpoint</ShortMessage><LongMessage>easyupload.controller.UtilController is a Spring endpoint (Controller)</LongMessage><Class classname='easyupload.controller.UtilController' primary='true'><SourceLine classname='easyupload.controller.UtilController' start='12' end='37' sourcepath='easyupload/controller/UtilController.java' sourcefile='UtilController.java'><Message>At UtilController.java:[lines 12-37]</Message></SourceLine><Message>In class easyupload.controller.UtilController</Message></Class><Method isStatic='false' classname='easyupload.controller.UtilController' signature='()Ljava/lang/String;' name='getTestHistory' primary='true'><SourceLine endBytecode='59' classname='easyupload.controller.UtilController' start='17' end='19' sourcepath='easyupload/controller/UtilController.java' sourcefile='UtilController.java' startBytecode='0'></SourceLine><Message>In method easyupload.controller.UtilController.getTestHistory()</Message></Method><SourceLine synthetic='true' endBytecode='59' classname='easyupload.controller.UtilController' start='17' end='19' sourcepath='easyupload/controller/UtilController.java' sourcefile='UtilController.java' startBytecode='0'><Message>At UtilController.java:[lines 17-19]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='90c22aea4230b530d806dedaa04a7c20' cweid='117' rank='15' abbrev='SECCRLFLOG' category='SECURITY' priority='3' type='CRLF_INJECTION_LOGS' instanceOccurrenceMax='0'><ShortMessage>Potential CRLF Injection for logs</ShortMessage><LongMessage>This use of org/slf4j/Logger.info(Ljava/lang/String;)V might be used to include CRLF characters into log messages</LongMessage><Class classname='easyupload.interceptor.LoginInterceptor' primary='true'><SourceLine classname='easyupload.interceptor.LoginInterceptor' start='19' end='37' sourcepath='easyupload/interceptor/LoginInterceptor.java' sourcefile='LoginInterceptor.java'><Message>At LoginInterceptor.java:[lines 19-37]</Message></SourceLine><Message>In class easyupload.interceptor.LoginInterceptor</Message></Class><Method isStatic='false' classname='easyupload.interceptor.LoginInterceptor' signature='(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Ljava/lang/Object;)Z' name='preHandle' primary='true'><SourceLine endBytecode='268' classname='easyupload.interceptor.LoginInterceptor' start='27' end='37' sourcepath='easyupload/interceptor/LoginInterceptor.java' sourcefile='LoginInterceptor.java' startBytecode='0'></SourceLine><Message>In method easyupload.interceptor.LoginInterceptor.preHandle(HttpServletRequest, HttpServletResponse, Object)</Message></Method><SourceLine endBytecode='83' classname='easyupload.interceptor.LoginInterceptor' start='31' end='31' sourcepath='easyupload/interceptor/LoginInterceptor.java' sourcefile='LoginInterceptor.java' startBytecode='83' primary='true'><Message>At LoginInterceptor.java:[line 31]</Message></SourceLine><String role='Sink method' value='org/slf4j/Logger.info(Ljava/lang/String;)V'><Message>Sink method org/slf4j/Logger.info(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='javax/servlet/http/HttpSession.getAttribute(Ljava/lang/String;)Ljava/lang/Object;'><Message>Unknown source javax/servlet/http/HttpSession.getAttribute(Ljava/lang/String;)Ljava/lang/Object;</Message></String><SourceLine endBytecode='49' classname='easyupload.interceptor.LoginInterceptor' start='30' end='30' sourcepath='easyupload/interceptor/LoginInterceptor.java' sourcefile='LoginInterceptor.java' startBytecode='49'><Message>At LoginInterceptor.java:[line 30]</Message></SourceLine><SourceLine endBytecode='77' classname='easyupload.interceptor.LoginInterceptor' start='31' end='31' sourcepath='easyupload/interceptor/LoginInterceptor.java' sourcefile='LoginInterceptor.java' startBytecode='77'><Message>At LoginInterceptor.java:[line 31]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='72632f416b678b0e5b92554e9afb81be' cweid='22' rank='12' abbrev='SECPTI' category='SECURITY' priority='2' type='PATH_TRAVERSAL_IN' instanceOccurrenceMax='0'><ShortMessage>Potential Path Traversal (file read)</ShortMessage><LongMessage>java/nio/file/Paths.get(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path; reads a file whose location might be specified by user input</LongMessage><Class classname='easyupload.persistence.impl.PropertiesServiceCallPersistence' primary='true'><SourceLine classname='easyupload.persistence.impl.PropertiesServiceCallPersistence' start='31' end='229' sourcepath='easyupload/persistence/impl/PropertiesServiceCallPersistence.java' sourcefile='PropertiesServiceCallPersistence.java'><Message>At PropertiesServiceCallPersistence.java:[lines 31-229]</Message></SourceLine><Message>In class easyupload.persistence.impl.PropertiesServiceCallPersistence</Message></Class><Method isStatic='false' classname='easyupload.persistence.impl.PropertiesServiceCallPersistence' signature='(Ljava/lang/String;)V' name='&lt;init&gt;' primary='true'><SourceLine endBytecode='347' classname='easyupload.persistence.impl.PropertiesServiceCallPersistence' start='36' end='56' sourcepath='easyupload/persistence/impl/PropertiesServiceCallPersistence.java' sourcefile='PropertiesServiceCallPersistence.java' startBytecode='0'></SourceLine><Message>In method new easyupload.persistence.impl.PropertiesServiceCallPersistence(String)</Message></Method><SourceLine endBytecode='36' classname='easyupload.persistence.impl.PropertiesServiceCallPersistence' start='40' end='40' sourcepath='easyupload/persistence/impl/PropertiesServiceCallPersistence.java' sourcefile='PropertiesServiceCallPersistence.java' startBytecode='36' primary='true'><Message>At PropertiesServiceCallPersistence.java:[line 40]</Message></SourceLine><String role='Sink method' value='java/nio/file/Paths.get(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;'><Message>Sink method java/nio/file/Paths.get(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;</Message></String><String role='Sink parameter' value='1'><Message>Sink parameter 1</Message></String><String role='Unknown source' value='easyupload/persistence/impl/PropertiesServiceCallPersistence.propFileName'><Message>Unknown source easyupload/persistence/impl/PropertiesServiceCallPersistence.propFileName</Message></String><String role='Unknown source' value='java/io/File.separator'><Message>Unknown source java/io/File.separator</Message></String><SourceLine endBytecode='8' classname='easyupload.config.ApplicationConfig' start='62' end='62' sourcepath='easyupload/config/ApplicationConfig.java' sourcefile='ApplicationConfig.java' startBytecode='8'><Message>At ApplicationConfig.java:[line 62]</Message></SourceLine><SourceLine endBytecode='29' classname='easyupload.persistence.impl.PropertiesServiceCallPersistence' start='40' end='40' sourcepath='easyupload/persistence/impl/PropertiesServiceCallPersistence.java' sourcefile='PropertiesServiceCallPersistence.java' startBytecode='29'><Message>At PropertiesServiceCallPersistence.java:[line 40]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='65688d9af549bad14bb3e85524d3482f' cweid='22' rank='12' abbrev='SECPTI' category='SECURITY' priority='2' type='PATH_TRAVERSAL_IN' instanceOccurrenceMax='0'><ShortMessage>Potential Path Traversal (file read)</ShortMessage><LongMessage>java/io/File.&lt;init&gt;(Ljava/lang/String;)V reads a file whose location might be specified by user input</LongMessage><Class classname='easyupload.service.FileUploadService' primary='true'><SourceLine classname='easyupload.service.FileUploadService' start='17' end='33' sourcepath='easyupload/service/FileUploadService.java' sourcefile='FileUploadService.java'><Message>At FileUploadService.java:[lines 17-33]</Message></SourceLine><Message>In class easyupload.service.FileUploadService</Message></Class><Method isStatic='false' classname='easyupload.service.FileUploadService' signature='(Leasyupload/entity/FileUpload;)V' name='uploadFile' primary='true'><SourceLine endBytecode='218' classname='easyupload.service.FileUploadService' start='23' end='33' sourcepath='easyupload/service/FileUploadService.java' sourcefile='FileUploadService.java' startBytecode='0'></SourceLine><Message>In method easyupload.service.FileUploadService.uploadFile(FileUpload)</Message></Method><SourceLine endBytecode='32' classname='easyupload.service.FileUploadService' start='23' end='23' sourcepath='easyupload/service/FileUploadService.java' sourcefile='FileUploadService.java' startBytecode='32' primary='true'><Message>At FileUploadService.java:[line 23]</Message></SourceLine><String role='Sink method' value='java/io/File.&lt;init&gt;(Ljava/lang/String;)V'><Message>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='java/io/File.separator'><Message>Unknown source java/io/File.separator</Message></String><String role='Unknown source' value='easyupload/entity/FileUpload.getUuid()Ljava/lang/String;'><Message>Unknown source easyupload/entity/FileUpload.getUuid()Ljava/lang/String;</Message></String><String role='Unknown source' value='easyupload/service/FileUploadService.baseDir'><Message>Unknown source easyupload/service/FileUploadService.baseDir</Message></String><SourceLine endBytecode='29' classname='easyupload.service.FileUploadService' start='23' end='23' sourcepath='easyupload/service/FileUploadService.java' sourcefile='FileUploadService.java' startBytecode='29'><Message>At FileUploadService.java:[line 23]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='c46ca7bbf3849e418e1dab0767d3301f' cweid='22' rank='12' abbrev='SECPTI' category='SECURITY' priority='2' type='PATH_TRAVERSAL_IN' instanceOccurrenceMax='0'><ShortMessage>Potential Path Traversal (file read)</ShortMessage><LongMessage>java/nio/file/Paths.get(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path; reads a file whose location might be specified by user input</LongMessage><Class classname='easyupload.service.FileUploadService' primary='true'><SourceLine classname='easyupload.service.FileUploadService' start='17' end='33' sourcepath='easyupload/service/FileUploadService.java' sourcefile='FileUploadService.java'><Message>At FileUploadService.java:[lines 17-33]</Message></SourceLine><Message>In class easyupload.service.FileUploadService</Message></Class><Method isStatic='false' classname='easyupload.service.FileUploadService' signature='(Leasyupload/entity/FileUpload;)V' name='uploadFile' primary='true'><SourceLine endBytecode='218' classname='easyupload.service.FileUploadService' start='23' end='33' sourcepath='easyupload/service/FileUploadService.java' sourcefile='FileUploadService.java' startBytecode='0'></SourceLine><Message>In method easyupload.service.FileUploadService.uploadFile(FileUpload)</Message></Method><SourceLine endBytecode='77' classname='easyupload.service.FileUploadService' start='30' end='30' sourcepath='easyupload/service/FileUploadService.java' sourcefile='FileUploadService.java' startBytecode='77' primary='true'><Message>At FileUploadService.java:[line 30]</Message></SourceLine><String role='Sink method' value='java/nio/file/Paths.get(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;'><Message>Sink method java/nio/file/Paths.get(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;</Message></String><String role='Sink parameter' value='1'><Message>Sink parameter 1</Message></String><String role='Unknown source' value='java/io/File.separator'><Message>Unknown source java/io/File.separator</Message></String><String role='Unknown source' value='java/io/File.getAbsolutePath()Ljava/lang/String;'><Message>Unknown source java/io/File.getAbsolutePath()Ljava/lang/String;</Message></String><String role='Unknown source' value='easyupload/entity/FileUpload.getFilename()Ljava/lang/String;'><Message>Unknown source easyupload/entity/FileUpload.getFilename()Ljava/lang/String;</Message></String><SourceLine endBytecode='60' classname='easyupload.service.FileUploadService' start='30' end='30' sourcepath='easyupload/service/FileUploadService.java' sourcefile='FileUploadService.java' startBytecode='60'><Message>At FileUploadService.java:[line 30]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='c720782427de53f6f2596e121fbed62b' cweid='117' rank='15' abbrev='SECCRLFLOG' category='SECURITY' priority='3' type='CRLF_INJECTION_LOGS' instanceOccurrenceMax='0'><ShortMessage>Potential CRLF Injection for logs</ShortMessage><LongMessage>This use of org/slf4j/Logger.info(Ljava/lang/String;Ljava/lang/Throwable;)V might be used to include CRLF characters into log messages</LongMessage><Class classname='easyupload.service.WatcherService' primary='true'><SourceLine classname='easyupload.service.WatcherService' start='20' end='108' sourcepath='easyupload/service/WatcherService.java' sourcefile='WatcherService.java'><Message>At WatcherService.java:[lines 20-108]</Message></SourceLine><Message>In class easyupload.service.WatcherService</Message></Class><Method isStatic='false' classname='easyupload.service.WatcherService' signature='(Ljava/lang/String;Ljava/nio/file/WatchService;)V' name='lambda$destroy$0' primary='true'><SourceLine endBytecode='161' classname='easyupload.service.WatcherService' start='58' end='63' sourcepath='easyupload/service/WatcherService.java' sourcefile='WatcherService.java' startBytecode='0'></SourceLine><Message>In method easyupload.service.WatcherService.lambda$destroy$0(String, WatchService)</Message></Method><SourceLine endBytecode='34' classname='easyupload.service.WatcherService' start='60' end='60' sourcepath='easyupload/service/WatcherService.java' sourcefile='WatcherService.java' startBytecode='34' primary='true'><Message>At WatcherService.java:[line 60]</Message></SourceLine><String role='Sink method' value='org/slf4j/Logger.info(Ljava/lang/String;Ljava/lang/Throwable;)V'><Message>Sink method org/slf4j/Logger.info(Ljava/lang/String;Ljava/lang/Throwable;)V</Message></String><String role='Sink parameter' value='1'><Message>Sink parameter 1</Message></String><String role='Method usage' value='not detected'><Message>Method usage not detected</Message></String><SourceLine endBytecode='30' classname='easyupload.service.WatcherService' start='60' end='60' sourcepath='easyupload/service/WatcherService.java' sourcefile='WatcherService.java' startBytecode='30'><Message>At WatcherService.java:[line 60]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='9a895d45550e2273128471acaac249f4' cweid='117' rank='15' abbrev='SECCRLFLOG' category='SECURITY' priority='3' type='CRLF_INJECTION_LOGS' instanceOccurrenceMax='0'><ShortMessage>Potential CRLF Injection for logs</ShortMessage><LongMessage>This use of org/slf4j/Logger.info(Ljava/lang/String;)V might be used to include CRLF characters into log messages</LongMessage><Class classname='easyupload.service.WatcherService' primary='true'><SourceLine classname='easyupload.service.WatcherService' start='20' end='108' sourcepath='easyupload/service/WatcherService.java' sourcefile='WatcherService.java'><Message>At WatcherService.java:[lines 20-108]</Message></SourceLine><Message>In class easyupload.service.WatcherService</Message></Class><Method isStatic='false' classname='easyupload.service.WatcherService' signature='()V' name='registerPaths' primary='true'><SourceLine endBytecode='398' classname='easyupload.service.WatcherService' start='30' end='46' sourcepath='easyupload/service/WatcherService.java' sourcefile='WatcherService.java' startBytecode='0'></SourceLine><Message>In method easyupload.service.WatcherService.registerPaths()</Message></Method><SourceLine endBytecode='26' classname='easyupload.service.WatcherService' start='30' end='30' sourcepath='easyupload/service/WatcherService.java' sourcefile='WatcherService.java' startBytecode='26' primary='true'><Message>At WatcherService.java:[line 30]</Message></SourceLine><String role='Sink method' value='org/slf4j/Logger.info(Ljava/lang/String;)V'><Message>Sink method org/slf4j/Logger.info(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='easyupload/service/WatcherService.watchDirs'><Message>Unknown source easyupload/service/WatcherService.watchDirs</Message></String><SourceLine endBytecode='20' classname='easyupload.service.WatcherService' start='30' end='30' sourcepath='easyupload/service/WatcherService.java' sourcefile='WatcherService.java' startBytecode='20'><Message>At WatcherService.java:[line 30]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='1b1c4d4b072538936bd70bb998158da2' cweid='117' rank='15' abbrev='SECCRLFLOG' category='SECURITY' priority='3' type='CRLF_INJECTION_LOGS' instanceOccurrenceMax='0'><ShortMessage>Potential CRLF Injection for logs</ShortMessage><LongMessage>This use of org/slf4j/Logger.info(Ljava/lang/String;)V might be used to include CRLF characters into log messages</LongMessage><Class classname='easyupload.service.WatcherService' primary='true'><SourceLine classname='easyupload.service.WatcherService' start='20' end='108' sourcepath='easyupload/service/WatcherService.java' sourcefile='WatcherService.java'><Message>At WatcherService.java:[lines 20-108]</Message></SourceLine><Message>In class easyupload.service.WatcherService</Message></Class><Method isStatic='false' classname='easyupload.service.WatcherService' signature='()V' name='registerPaths' primary='true'><SourceLine endBytecode='398' classname='easyupload.service.WatcherService' start='30' end='46' sourcepath='easyupload/service/WatcherService.java' sourcefile='WatcherService.java' startBytecode='0'></SourceLine><Message>In method easyupload.service.WatcherService.registerPaths()</Message></Method><SourceLine endBytecode='148' classname='easyupload.service.WatcherService' start='40' end='40' sourcepath='easyupload/service/WatcherService.java' sourcefile='WatcherService.java' startBytecode='148' primary='true'><Message>At WatcherService.java:[line 40]</Message></SourceLine><String role='Sink method' value='org/slf4j/Logger.info(Ljava/lang/String;)V'><Message>Sink method org/slf4j/Logger.info(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='java/io/File.getAbsolutePath()Ljava/lang/String;'><Message>Unknown source java/io/File.getAbsolutePath()Ljava/lang/String;</Message></String><SourceLine endBytecode='142' classname='easyupload.service.WatcherService' start='40' end='40' sourcepath='easyupload/service/WatcherService.java' sourcefile='WatcherService.java' startBytecode='142'><Message>At WatcherService.java:[line 40]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='572c02bb8c0338eba1ad97fc4357be29' cweid='209' rank='15' abbrev='ERRMSG' category='SECURITY' priority='3' type='INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE' instanceOccurrenceMax='0'><ShortMessage>Information Exposure Through An Error Message</ShortMessage><LongMessage>Possible information exposure through an error message</LongMessage><Class classname='easyupload.service.WatcherService' primary='true'><SourceLine classname='easyupload.service.WatcherService' start='20' end='108' sourcepath='easyupload/service/WatcherService.java' sourcefile='WatcherService.java'><Message>At WatcherService.java:[lines 20-108]</Message></SourceLine><Message>In class easyupload.service.WatcherService</Message></Class><Method isStatic='true' classname='easyupload.service.WatcherService' signature='([Ljava/lang/String;)V' name='main' primary='true'><SourceLine endBytecode='688' classname='easyupload.service.WatcherService' start='67' end='108' sourcepath='easyupload/service/WatcherService.java' sourcefile='WatcherService.java' startBytecode='0'></SourceLine><Message>In method easyupload.service.WatcherService.main(String[])</Message></Method><SourceLine endBytecode='343' classname='easyupload.service.WatcherService' start='105' end='105' sourcepath='easyupload/service/WatcherService.java' sourcefile='WatcherService.java' startBytecode='343' primary='true'><Message>At WatcherService.java:[line 105]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='e7f02bc5b71e3d32ab710ce17ddd029f' cweid='22' rank='12' abbrev='SECPTI' category='SECURITY' priority='2' type='PATH_TRAVERSAL_IN' instanceOccurrenceMax='0'><ShortMessage>Potential Path Traversal (file read)</ShortMessage><LongMessage>java/nio/file/Paths.get(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path; reads a file whose location might be specified by user input</LongMessage><Class classname='easyupload.service.WatcherService' primary='true'><SourceLine classname='easyupload.service.WatcherService' start='20' end='108' sourcepath='easyupload/service/WatcherService.java' sourcefile='WatcherService.java'><Message>At WatcherService.java:[lines 20-108]</Message></SourceLine><Message>In class easyupload.service.WatcherService</Message></Class><Method isStatic='false' classname='easyupload.service.WatcherService' signature='()V' name='registerPaths' primary='true'><SourceLine endBytecode='398' classname='easyupload.service.WatcherService' start='30' end='46' sourcepath='easyupload/service/WatcherService.java' sourcefile='WatcherService.java' startBytecode='0'></SourceLine><Message>In method easyupload.service.WatcherService.registerPaths()</Message></Method><SourceLine endBytecode='67' classname='easyupload.service.WatcherService' start='34' end='34' sourcepath='easyupload/service/WatcherService.java' sourcefile='WatcherService.java' startBytecode='67' primary='true'><Message>At WatcherService.java:[line 34]</Message></SourceLine><String role='Sink method' value='java/nio/file/Paths.get(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;'><Message>Sink method java/nio/file/Paths.get(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;</Message></String><String role='Sink parameter' value='1'><Message>Sink parameter 1</Message></String><String role='Unknown source' value='easyupload/service/WatcherService.watchDirs'><Message>Unknown source easyupload/service/WatcherService.watchDirs</Message></String><SourceLine endBytecode='37' classname='easyupload.service.WatcherService' start='31' end='31' sourcepath='easyupload/service/WatcherService.java' sourcefile='WatcherService.java' startBytecode='37'><Message>At WatcherService.java:[line 31]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='d56e265dca320ca5fa131f9c2a0e6b77' cweid='117' rank='15' abbrev='SECCRLFLOG' category='SECURITY' priority='3' type='CRLF_INJECTION_LOGS' instanceOccurrenceMax='0'><ShortMessage>Potential CRLF Injection for logs</ShortMessage><LongMessage>This use of org/slf4j/Logger.info(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V might be used to include CRLF characters into log messages</LongMessage><Class classname='easyupload.utils.ApplicationUtils' primary='true'><SourceLine classname='easyupload.utils.ApplicationUtils' start='25' end='155' sourcepath='easyupload/utils/ApplicationUtils.java' sourcefile='ApplicationUtils.java'><Message>At ApplicationUtils.java:[lines 25-155]</Message></SourceLine><Message>In class easyupload.utils.ApplicationUtils</Message></Class><Method isStatic='true' classname='easyupload.utils.ApplicationUtils' signature='(Ljava/lang/String;)I' name='executeAsCommand' primary='true'><SourceLine endBytecode='293' classname='easyupload.utils.ApplicationUtils' start='74' end='95' sourcepath='easyupload/utils/ApplicationUtils.java' sourcefile='ApplicationUtils.java' startBytecode='0'></SourceLine><Message>In method easyupload.utils.ApplicationUtils.executeAsCommand(String)</Message></Method><SourceLine endBytecode='43' classname='easyupload.utils.ApplicationUtils' start='82' end='82' sourcepath='easyupload/utils/ApplicationUtils.java' sourcefile='ApplicationUtils.java' startBytecode='43' primary='true'><Message>At ApplicationUtils.java:[line 82]</Message></SourceLine><String role='Sink method' value='org/slf4j/Logger.info(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V'><Message>Sink method org/slf4j/Logger.info(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V</Message></String><String role='Sink parameter' value='1'><Message>Sink parameter 1</Message></String><String role='Method usage' value='not detected'><Message>Method usage not detected</Message></String></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='398cc49ff94185b52d813d16b587c59c' cweid='117' rank='15' abbrev='SECCRLFLOG' category='SECURITY' priority='3' type='CRLF_INJECTION_LOGS' instanceOccurrenceMax='0'><ShortMessage>Potential CRLF Injection for logs</ShortMessage><LongMessage>This use of org/slf4j/Logger.error(Ljava/lang/String;)V might be used to include CRLF characters into log messages</LongMessage><Class classname='easyupload.utils.ApplicationUtils$1' primary='true'><SourceLine classname='easyupload.utils.ApplicationUtils$1' start='56' end='69' sourcepath='easyupload/utils/ApplicationUtils.java' sourcefile='ApplicationUtils.java'><Message>At ApplicationUtils.java:[lines 56-69]</Message></SourceLine><Message>In class easyupload.utils.ApplicationUtils$1</Message></Class><Method isStatic='false' classname='easyupload.utils.ApplicationUtils$1' signature='(Ljava/lang/String;I)V' name='processLine' primary='true'><SourceLine endBytecode='167' classname='easyupload.utils.ApplicationUtils$1' start='60' end='69' sourcepath='easyupload/utils/ApplicationUtils.java' sourcefile='ApplicationUtils.java' startBytecode='0'></SourceLine><Message>In method easyupload.utils.ApplicationUtils$1.processLine(String, int)</Message></Method><SourceLine endBytecode='10' classname='easyupload.utils.ApplicationUtils$1' start='61' end='61' sourcepath='easyupload/utils/ApplicationUtils.java' sourcefile='ApplicationUtils.java' startBytecode='10' primary='true'><Message>At ApplicationUtils.java:[line 61]</Message></SourceLine><String role='Sink method' value='org/slf4j/Logger.error(Ljava/lang/String;)V'><Message>Sink method org/slf4j/Logger.error(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Method usage' value='not detected'><Message>Method usage not detected</Message></String></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='a5b3a1d7db7b15b6b5aff176fe584e1f' cweid='117' rank='15' abbrev='SECCRLFLOG' category='SECURITY' priority='3' type='CRLF_INJECTION_LOGS' instanceOccurrenceMax='0'><ShortMessage>Potential CRLF Injection for logs</ShortMessage><LongMessage>This use of org/slf4j/Logger.warn(Ljava/lang/String;)V might be used to include CRLF characters into log messages</LongMessage><Class classname='easyupload.utils.ApplicationUtils$1' primary='true'><SourceLine classname='easyupload.utils.ApplicationUtils$1' start='56' end='69' sourcepath='easyupload/utils/ApplicationUtils.java' sourcefile='ApplicationUtils.java'><Message>At ApplicationUtils.java:[lines 56-69]</Message></SourceLine><Message>In class easyupload.utils.ApplicationUtils$1</Message></Class><Method isStatic='false' classname='easyupload.utils.ApplicationUtils$1' signature='(Ljava/lang/String;I)V' name='processLine' primary='true'><SourceLine endBytecode='167' classname='easyupload.utils.ApplicationUtils$1' start='60' end='69' sourcepath='easyupload/utils/ApplicationUtils.java' sourcefile='ApplicationUtils.java' startBytecode='0'></SourceLine><Message>In method easyupload.utils.ApplicationUtils$1.processLine(String, int)</Message></Method><SourceLine endBytecode='29' classname='easyupload.utils.ApplicationUtils$1' start='63' end='63' sourcepath='easyupload/utils/ApplicationUtils.java' sourcefile='ApplicationUtils.java' startBytecode='29' primary='true'><Message>At ApplicationUtils.java:[line 63]</Message></SourceLine><String role='Sink method' value='org/slf4j/Logger.warn(Ljava/lang/String;)V'><Message>Sink method org/slf4j/Logger.warn(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Method usage' value='not detected'><Message>Method usage not detected</Message></String></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='c8f9468563c4535b45533eca89b097e6' cweid='117' rank='15' abbrev='SECCRLFLOG' category='SECURITY' priority='3' type='CRLF_INJECTION_LOGS' instanceOccurrenceMax='0'><ShortMessage>Potential CRLF Injection for logs</ShortMessage><LongMessage>This use of org/slf4j/Logger.debug(Ljava/lang/String;)V might be used to include CRLF characters into log messages</LongMessage><Class classname='easyupload.utils.ApplicationUtils$1' primary='true'><SourceLine classname='easyupload.utils.ApplicationUtils$1' start='56' end='69' sourcepath='easyupload/utils/ApplicationUtils.java' sourcefile='ApplicationUtils.java'><Message>At ApplicationUtils.java:[lines 56-69]</Message></SourceLine><Message>In class easyupload.utils.ApplicationUtils$1</Message></Class><Method isStatic='false' classname='easyupload.utils.ApplicationUtils$1' signature='(Ljava/lang/String;I)V' name='processLine' primary='true'><SourceLine endBytecode='167' classname='easyupload.utils.ApplicationUtils$1' start='60' end='69' sourcepath='easyupload/utils/ApplicationUtils.java' sourcefile='ApplicationUtils.java' startBytecode='0'></SourceLine><Message>In method easyupload.utils.ApplicationUtils$1.processLine(String, int)</Message></Method><SourceLine endBytecode='48' classname='easyupload.utils.ApplicationUtils$1' start='65' end='65' sourcepath='easyupload/utils/ApplicationUtils.java' sourcefile='ApplicationUtils.java' startBytecode='48' primary='true'><Message>At ApplicationUtils.java:[line 65]</Message></SourceLine><String role='Sink method' value='org/slf4j/Logger.debug(Ljava/lang/String;)V'><Message>Sink method org/slf4j/Logger.debug(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Method usage' value='not detected'><Message>Method usage not detected</Message></String></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='c1761d19ffc86f8da98b3c5224406230' cweid='117' rank='15' abbrev='SECCRLFLOG' category='SECURITY' priority='3' type='CRLF_INJECTION_LOGS' instanceOccurrenceMax='0'><ShortMessage>Potential CRLF Injection for logs</ShortMessage><LongMessage>This use of org/slf4j/Logger.info(Ljava/lang/String;)V might be used to include CRLF characters into log messages</LongMessage><Class classname='easyupload.utils.ApplicationUtils$1' primary='true'><SourceLine classname='easyupload.utils.ApplicationUtils$1' start='56' end='69' sourcepath='easyupload/utils/ApplicationUtils.java' sourcefile='ApplicationUtils.java'><Message>At ApplicationUtils.java:[lines 56-69]</Message></SourceLine><Message>In class easyupload.utils.ApplicationUtils$1</Message></Class><Method isStatic='false' classname='easyupload.utils.ApplicationUtils$1' signature='(Ljava/lang/String;I)V' name='processLine' primary='true'><SourceLine endBytecode='167' classname='easyupload.utils.ApplicationUtils$1' start='60' end='69' sourcepath='easyupload/utils/ApplicationUtils.java' sourcefile='ApplicationUtils.java' startBytecode='0'></SourceLine><Message>In method easyupload.utils.ApplicationUtils$1.processLine(String, int)</Message></Method><SourceLine endBytecode='60' classname='easyupload.utils.ApplicationUtils$1' start='67' end='67' sourcepath='easyupload/utils/ApplicationUtils.java' sourcefile='ApplicationUtils.java' startBytecode='60' primary='true'><Message>At ApplicationUtils.java:[line 67]</Message></SourceLine><String role='Sink method' value='org/slf4j/Logger.info(Ljava/lang/String;)V'><Message>Sink method org/slf4j/Logger.info(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Method usage' value='not detected'><Message>Method usage not detected</Message></String></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='4cf3f33b94a24043bfa15af249f65786' cweid='330' rank='12' abbrev='SECPR' category='SECURITY' priority='2' type='PREDICTABLE_RANDOM' instanceOccurrenceMax='0'><ShortMessage>Predictable pseudorandom number generator</ShortMessage><LongMessage>The use of org.apache.commons.lang.RandomStringUtilsrandomNumeric() is predictable</LongMessage><Class classname='easyupload.utils.RandomUtil' primary='true'><SourceLine classname='easyupload.utils.RandomUtil' start='14' end='36' sourcepath='easyupload/utils/RandomUtil.java' sourcefile='RandomUtil.java'><Message>At RandomUtil.java:[lines 14-36]</Message></SourceLine><Message>In class easyupload.utils.RandomUtil</Message></Class><Method isStatic='true' classname='easyupload.utils.RandomUtil' signature='()Ljava/lang/String;' name='generateActivationKey' primary='true'><SourceLine endBytecode='29' classname='easyupload.utils.RandomUtil' start='32' end='32' sourcepath='easyupload/utils/RandomUtil.java' sourcefile='RandomUtil.java' startBytecode='0'></SourceLine><Message>In method easyupload.utils.RandomUtil.generateActivationKey()</Message></Method><SourceLine endBytecode='2' classname='easyupload.utils.RandomUtil' start='32' end='32' sourcepath='easyupload/utils/RandomUtil.java' sourcefile='RandomUtil.java' startBytecode='2' primary='true'><Message>At RandomUtil.java:[line 32]</Message></SourceLine><String value='org.apache.commons.lang.RandomStringUtilsrandomNumeric()'><Message>Value org.apache.commons.lang.RandomStringUtilsrandomNumeric()</Message></String></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='d0e1f6813d0e818308261030c98dde8f' cweid='330' rank='12' abbrev='SECPR' category='SECURITY' priority='2' type='PREDICTABLE_RANDOM' instanceOccurrenceMax='0'><ShortMessage>Predictable pseudorandom number generator</ShortMessage><LongMessage>The use of org.apache.commons.lang.RandomStringUtilsrandomAlphanumeric() is predictable</LongMessage><Class classname='easyupload.utils.RandomUtil' primary='true'><SourceLine classname='easyupload.utils.RandomUtil' start='14' end='36' sourcepath='easyupload/utils/RandomUtil.java' sourcefile='RandomUtil.java'><Message>At RandomUtil.java:[lines 14-36]</Message></SourceLine><Message>In class easyupload.utils.RandomUtil</Message></Class><Method isStatic='true' classname='easyupload.utils.RandomUtil' signature='()Ljava/lang/String;' name='generatePassword' primary='true'><SourceLine endBytecode='29' classname='easyupload.utils.RandomUtil' start='23' end='23' sourcepath='easyupload/utils/RandomUtil.java' sourcefile='RandomUtil.java' startBytecode='0'></SourceLine><Message>In method easyupload.utils.RandomUtil.generatePassword()</Message></Method><SourceLine endBytecode='2' classname='easyupload.utils.RandomUtil' start='23' end='23' sourcepath='easyupload/utils/RandomUtil.java' sourcefile='RandomUtil.java' startBytecode='2' primary='true'><Message>At RandomUtil.java:[line 23]</Message></SourceLine><String value='org.apache.commons.lang.RandomStringUtilsrandomAlphanumeric()'><Message>Value org.apache.commons.lang.RandomStringUtilsrandomAlphanumeric()</Message></String></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='c1bb255648ba7c2fd0ec5922823799b3' rank='15' abbrev='SECSC' category='SECURITY' priority='3' type='SPRING_ENDPOINT' instanceOccurrenceMax='0'><ShortMessage>Found Spring endpoint</ShortMessage><LongMessage>hello.AppController is a Spring endpoint (Controller)</LongMessage><Class classname='hello.AppController' primary='true'><SourceLine classname='hello.AppController' start='14' end='18' sourcepath='hello/AppController.java' sourcefile='AppController.java'><Message>At AppController.java:[lines 14-18]</Message></SourceLine><Message>In class hello.AppController</Message></Class><Method isStatic='false' classname='hello.AppController' signature='()Ljava/util/List;' name='jobInfo' primary='true'><SourceLine endBytecode='98' classname='hello.AppController' start='18' end='18' sourcepath='hello/AppController.java' sourcefile='AppController.java' startBytecode='0'></SourceLine><Message>In method hello.AppController.jobInfo()</Message></Method><SourceLine synthetic='true' endBytecode='98' classname='hello.AppController' start='18' end='18' sourcepath='hello/AppController.java' sourcefile='AppController.java' startBytecode='0'><Message>At AppController.java:[line 18]</Message></SourceLine></BugInstance><BugCategory category='SECURITY'><Description>Security</Description></BugCategory><BugPattern cweid='117' abbrev='SECCRLFLOG' category='SECURITY' type='CRLF_INJECTION_LOGS'><ShortDescription>Potential CRLF Injection for logs</ShortDescription><Details>
            
&lt;p&gt;
    When data from an untrusted source is put into a logger and not neutralized correctly,
    an attacker could forge log entries or include malicious content.
    Inserted false entries could be used to skew statistics, distract the administrator
    or even to implicate another party in the commission of a malicious act.
    If the log file is processed automatically, the attacker can render the file unusable
    by corrupting the format of the file or injecting unexpected characters.
    An attacker may also inject code or other commands into the log file and take advantage
    of a vulnerability in the log processing utility (e.g. command injection or XSS).
&lt;/p&gt;
&lt;br/&gt;
&lt;p&gt;
&lt;b&gt;Code at risk:&lt;/b&gt;&lt;br/&gt;
&lt;pre&gt;String val = request.getParameter("user");
String metadata = request.getParameter("metadata");
[...]
if(authenticated) {
    log.info("User " + val + " (" + metadata + ") was authenticated successfully");
}
else {
    log.info("User " + val + " (" + metadata + ") was not authenticated");
}
&lt;/pre&gt;

A malicious user could send the metadata parameter with the value: &lt;code&gt;"Firefox) was authenticated successfully\r\n[INFO] User bbb (Internet Explorer"&lt;/code&gt;.
&lt;/p&gt;

&lt;b&gt;Solution:&lt;/b&gt;&lt;br/&gt;
&lt;p&gt;
You can manually sanitize each parameter.
&lt;pre&gt;
log.info("User " + val.replaceAll("[\r\n]","") + " (" + userAgent.replaceAll("[\r\n]","") + ") was not authenticated");
&lt;/pre&gt;
&lt;/p&gt;

&lt;p&gt;
You can also configure your logger service to replace new line for all message events. Here is sample configuration for LogBack &lt;a href="https://logback.qos.ch/manual/layouts.html#replace"&gt;using the &lt;code&gt;replace&lt;/code&gt; function&lt;/a&gt;.
&lt;pre&gt;
&amp;lt;pattern&amp;gt;%-5level - %replace(%msg){'[\r\n]', ''}%n&amp;lt;/pattern&amp;gt;
&lt;/pre&gt;
&lt;/p&gt;

&lt;p&gt;
Finally, you can use a logger implementation that replace new line by spaces.
The project &lt;a href="https://github.com/javabeanz/owasp-security-logging"&gt;OWASP Security Logging&lt;/a&gt; has an implementation for Logback and Log4j.
&lt;/p&gt;

&lt;br/&gt;
&lt;p&gt;
    &lt;b&gt;References&lt;/b&gt;&lt;br/&gt;
    &lt;a href="http://cwe.mitre.org/data/definitions/117.html"&gt;CWE-117: Improper Output Neutralization for Logs&lt;/a&gt;&lt;br/&gt;
    &lt;a href="http://cwe.mitre.org/data/definitions/93.html"&gt;CWE-93: Improper Neutralization of CRLF Sequences ('CRLF Injection')&lt;/a&gt;&lt;br/&gt;
    &lt;a href="https://logback.qos.ch/manual/layouts.html#replace"&gt;CWE-93: Improper Neutralization of CRLF Sequences ('CRLF Injection')&lt;/a&gt;&lt;br/&gt;
    &lt;a href="https://github.com/javabeanz/owasp-security-logging"&gt;OWASP Security Logging&lt;/a&gt;&lt;br/&gt;
&lt;/p&gt;


        </Details></BugPattern><BugPattern cweid='22' abbrev='SECPTI' category='SECURITY' type='PATH_TRAVERSAL_IN'><ShortDescription>Potential Path Traversal (file read)</ShortDescription><Details>
            
&lt;p&gt;A file is opened to read its content. The filename comes from an &lt;b&gt;input&lt;/b&gt; parameter. 
If an unfiltered parameter is passed to this file API, files from an arbitrary filesystem location could be read.&lt;/p&gt;
&lt;p&gt;This rule identifies &lt;b&gt;potential&lt;/b&gt; path traversal vulnerabilities. In many cases, the constructed file path cannot be controlled
by the user. If that is the case, the reported instance is a false positive.&lt;/p&gt;
&lt;br/&gt;

&lt;p&gt;
    &lt;b&gt;Vulnerable Code:&lt;/b&gt;&lt;br/&gt;
&lt;pre&gt;@GET
@Path("/images/{image}")
@Produces("images/*")
public Response getImage(@javax.ws.rs.PathParam("image") String image) {
    File file = new File("resources/images/", image); //Weak point

    if (!file.exists()) {
        return Response.status(Status.NOT_FOUND).build();
    }

    return Response.ok().entity(new FileInputStream(file)).build();
}&lt;/pre&gt;
&lt;/p&gt;
&lt;br/&gt;

&lt;p&gt;
    &lt;b&gt;Solution:&lt;/b&gt;&lt;br/&gt;
&lt;pre&gt;import org.apache.commons.io.FilenameUtils;

@GET
@Path("/images/{image}")
@Produces("images/*")
public Response getImage(@javax.ws.rs.PathParam("image") String image) {
    File file = new File("resources/images/", FilenameUtils.getName(image)); //Fix

    if (!file.exists()) {
        return Response.status(Status.NOT_FOUND).build();
    }

    return Response.ok().entity(new FileInputStream(file)).build();
}&lt;/pre&gt;
&lt;/p&gt;
&lt;br/&gt;
&lt;p&gt;
&lt;b&gt;References&lt;/b&gt;&lt;br/&gt;
&lt;a href="http://projects.webappsec.org/w/page/13246952/Path%20Traversal"&gt;WASC: Path Traversal&lt;/a&gt;&lt;br/&gt;
&lt;a href="https://www.owasp.org/index.php/Path_Traversal"&gt;OWASP: Path Traversal&lt;/a&gt;&lt;br/&gt;
&lt;a href="http://capec.mitre.org/data/definitions/126.html"&gt;CAPEC-126: Path Traversal&lt;/a&gt;&lt;br/&gt;
&lt;a href="http://cwe.mitre.org/data/definitions/22.html"&gt;CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')&lt;/a&gt;
&lt;/p&gt;

        </Details></BugPattern><BugPattern abbrev='SECSC' category='SECURITY' type='SPRING_ENDPOINT'><ShortDescription>Found Spring endpoint</ShortDescription><Details>
            
&lt;p&gt;This class is a Spring Controller. All methods annotated with &lt;code&gt;RequestMapping&lt;/code&gt; (as well as its shortcut annotations &lt;code&gt;GetMapping&lt;/code&gt;, &lt;code&gt;PostMapping&lt;/code&gt;, &lt;code&gt;PutMapping&lt;/code&gt;, &lt;code&gt;DeleteMapping&lt;/code&gt;, and &lt;code&gt;PatchMapping&lt;/code&gt;) are reachable remotely.
This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.&lt;/p&gt;

        </Details></BugPattern><BugPattern cweid='209' abbrev='ERRMSG' category='SECURITY' type='INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE'><ShortDescription>Information Exposure Through An Error Message</ShortDescription><Details>
            
&lt;p&gt;
The sensitive information may be valuable information on its own (such as a password), or it may be useful for launching other, more deadly attacks. If an attack fails, an attacker may use error information provided by the server to launch another more focused attack. For example, an attempt to exploit a path traversal weakness (CWE-22) might yield the full pathname of the installed application. In turn, this could be used to select the proper number of ".." sequences to navigate to the targeted file. An attack using SQL injection (CWE-89) might not initially succeed, but an error message could reveal the malformed query, which would expose query logic and possibly even passwords or other sensitive information used within the query.
&lt;/p&gt;
&lt;p&gt;
    &lt;b&gt;Vulnerable Code:&lt;/b&gt;&lt;br/&gt;
&lt;pre&gt;try {
  out = httpResponse.getOutputStream()
} catch (Exception e) {
  e.printStackTrace(out);
}&lt;/pre&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;b&gt;References&lt;/b&gt;&lt;br/&gt;

&lt;a href="https://cwe.mitre.org/data/definitions/209.html"&gt;CWE-209: Information Exposure Through an Error Message&lt;/a&gt;
&lt;/p&gt;
            
        </Details></BugPattern><BugPattern cweid='501' abbrev='SECTBV' category='SECURITY' type='TRUST_BOUNDARY_VIOLATION'><ShortDescription>Trust Boundary Violation</ShortDescription><Details>
            
&lt;p&gt;
    "A trust boundary can be thought of as line drawn through a program. On one side of the line, data is untrusted.
    On the other side of the line, data is assumed to be trustworthy. The purpose of validation logic is to allow data
    to safely cross the trust boundary - to move from untrusted to trusted. A trust boundary violation occurs when a
    program blurs the line between what is trusted and what is untrusted. By combining trusted and untrusted data in the
    same data structure, it becomes easier for programmers to mistakenly trust unvalidated data." &lt;sup&gt;[1]&lt;/sup&gt;
&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;Code at risk:&lt;/b&gt;&lt;br/&gt;
&lt;pre&gt;
public void doSomething(HttpServletRequest req, String activateProperty) {
    //..

    req.getSession().setAttribute(activateProperty,"true");

}
&lt;/pre&gt;
&lt;br/&gt;
&lt;pre&gt;
public void loginEvent(HttpServletRequest req, String userSubmitted) {
    //..

    req.getSession().setAttribute("user",userSubmitted);
}
&lt;/pre&gt;
&lt;/p&gt;

&lt;p&gt;
&lt;b&gt;Solution:&lt;/b&gt;&lt;br/&gt;
&lt;p&gt;
The solution would be to add validation prior setting a new session attribute. When possible, prefer data from
safe location rather than using direct user input.
&lt;/p&gt;
&lt;br/&gt;
&lt;p&gt;
&lt;b&gt;References&lt;/b&gt;&lt;br/&gt;
[1] &lt;a href="https://cwe.mitre.org/data/definitions/501.html"&gt;CWE-501: Trust Boundary Violation&lt;/a&gt;&lt;br/&gt;
&lt;a href="https://www.owasp.org/index.php/Trust_Boundary_Violation"&gt;OWASP : Trust Boundary Violation&lt;/a&gt;
&lt;/p&gt;

        </Details></BugPattern><BugPattern cweid='330' abbrev='SECPR' category='SECURITY' type='PREDICTABLE_RANDOM'><ShortDescription>Predictable pseudorandom number generator</ShortDescription><Details>
            
&lt;p&gt;The use of a predictable random value can lead to vulnerabilities when used in certain security critical contexts. For example, when the value is used as:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;a CSRF token: a predictable token can lead to a CSRF attack as an attacker will know the value of the token&lt;/li&gt;
&lt;li&gt;a password reset token (sent by email): a predictable password token can lead to an account takeover, since an attacker will guess the URL of the "change password" form&lt;/li&gt;
&lt;li&gt;any other secret value&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
A quick fix could be to replace the use of &lt;code&gt;java.util.Random&lt;/code&gt; with something stronger, such as &lt;code&gt;java.security.SecureRandom&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
&lt;b&gt;Vulnerable Code:&lt;/b&gt;&lt;br/&gt;
&lt;pre&gt;String generateSecretToken() {
    Random r = new Random();
    return Long.toHexString(r.nextLong());
}&lt;/pre&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;b&gt;Solution:&lt;/b&gt;
&lt;pre&gt;import org.apache.commons.codec.binary.Hex;

String generateSecretToken() {
    SecureRandom secRandom = new SecureRandom();

    byte[] result = new byte[32];
    secRandom.nextBytes(result);
    return Hex.encodeHexString(result);
}&lt;/pre&gt;
&lt;/p&gt;
&lt;br/&gt;
&lt;p&gt;
&lt;b&gt;References&lt;/b&gt;&lt;br/&gt;
&lt;a href="http://jazzy.id.au/default/2010/09/20/cracking_random_number_generators_part_1.html"&gt;Cracking Random Number Generators - Part 1 (http://jazzy.id.au)&lt;/a&gt;&lt;br/&gt;
&lt;a href="https://www.securecoding.cert.org/confluence/display/java/MSC02-J.+Generate+strong+random+numbers"&gt;CERT: MSC02-J. Generate strong random numbers&lt;/a&gt;&lt;br/&gt;
&lt;a href="http://cwe.mitre.org/data/definitions/330.html"&gt;CWE-330: Use of Insufficiently Random Values&lt;/a&gt;&lt;br/&gt;
&lt;a href="http://blog.h3xstream.com/2014/12/predicting-struts-csrf-token-cve-2014.html"&gt;Predicting Struts CSRF Token (Example of real-life vulnerability and exploitation)&lt;/a&gt;
&lt;/p&gt;

        </Details></BugPattern><BugPattern cweid='113' abbrev='SECHRS' category='SECURITY' type='HTTP_RESPONSE_SPLITTING'><ShortDescription>Potential HTTP Response Splitting</ShortDescription><Details>
            
&lt;p&gt;
    When an HTTP request contains unexpected &lt;code&gt;CR&lt;/code&gt; and &lt;code&gt;LF&lt;/code&gt; characters, the server may respond with an output stream
    that is interpreted as two different HTTP responses (instead of one).
    An attacker can control the second response and mount attacks such as cross-site scripting and cache poisoning attacks.
    According to OWASP, the issue has been fixed in virtually all modern Java EE application servers, but it is still better to validate the input.
    If you are concerned about this risk, you should test on the platform of concern to see
    if the underlying platform allows for &lt;code&gt;CR&lt;/code&gt; or &lt;code&gt;LF&lt;/code&gt; characters to be injected into headers.
    This weakness is reported with low priority because it requires the web container to be vulnerable.
&lt;/p&gt;
&lt;br/&gt;
&lt;p&gt;
&lt;b&gt;Code at risk:&lt;/b&gt;&lt;br/&gt;
&lt;pre&gt;String author = request.getParameter(AUTHOR_PARAMETER);
// ...
Cookie cookie = new Cookie("author", author);
response.addCookie(cookie);&lt;/pre&gt;
&lt;/p&gt;
&lt;br/&gt;
&lt;p&gt;
    &lt;b&gt;References&lt;/b&gt;&lt;br/&gt;
    &lt;a href="https://www.owasp.org/index.php/HTTP_Response_Splitting"&gt;OWASP: HTTP Response Splitting&lt;/a&gt;&lt;br/&gt;
    &lt;a href="http://cwe.mitre.org/data/definitions/113.html"&gt;CWE-113: Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Response Splitting')&lt;/a&gt;
    &lt;a href="http://cwe.mitre.org/data/definitions/93.html"&gt;CWE-93: Improper Neutralization of CRLF Sequences ('CRLF Injection')&lt;/a&gt;&lt;br/&gt;
&lt;/p&gt;


        </Details></BugPattern><BugCode abbrev='SECPR'><Description>Predictable Pseudo Random Generator</Description></BugCode><BugCode abbrev='SECSC'><Description>Spring Endpoint</Description></BugCode><BugCode abbrev='ERRMSG'><Description>Information Exposure Through An Error Message</Description></BugCode><BugCode abbrev='SECCRLFLOG'><Description>CRLF Injection for logs</Description></BugCode><BugCode abbrev='SECHRS'><Description>HTTP Response Splitting</Description></BugCode><BugCode abbrev='SECTBV'><Description>Trust Boundary Violation</Description></BugCode><BugCode abbrev='SECPTI'><Description>Potential Path Traversal (file read)</Description></BugCode><Errors missingClasses='1' errors='0'><MissingClass>accept</MissingClass></Errors><FindBugsSummary num_packages='14' total_classes='41' priority_1='2' priority_2='24' priority_3='45' total_size='1246' clock_seconds='5.39' referenced_classes='243' vm_version='11.0.7+10-post-Ubuntu-2ubuntu218.04' total_bugs='71' java_version='11.0.7' gc_seconds='0.19' alloc_mbytes='512.00' cpu_seconds='25.80' peak_mbytes='190.82' timestamp='Thu, 16 Jul 2020 15:24:08 +0530'><FileStats path='easyupload/config/ApplicationConfig.java' size='45' bugCount='0'></FileStats><FileStats path='easyupload/config/DatabaseConfiguration.java' size='7' bugCount='0'></FileStats><FileStats path='easyupload/controller/FileController.java' size='135' bugHash='3b71eaf9a255f2551e8ca755bb85ce85' bugCount='16'></FileStats><FileStats path='easyupload/controller/HelpController.java' size='122' bugHash='354afbe5c80b2d6a7a8ba29b9627995f' bugCount='27'></FileStats><FileStats path='easyupload/controller/LoginController.java' size='35' bugHash='414aff7a6ed9a7ce4e954e7a0d859e21' bugCount='6'></FileStats><FileStats path='easyupload/controller/UrlController.java' size='5' bugHash='006c43abd2930a66a3a7c658f49b5ff5' bugCount='1'></FileStats><FileStats path='easyupload/controller/UtilController.java' size='15' bugHash='dc90c08eb69ed9da30c4db6b6aecb3a7' bugCount='4'></FileStats><FileStats path='easyupload/entity/CucumberFeature.java' size='20' bugCount='0'></FileStats><FileStats path='easyupload/entity/FileDetails.java' size='39' bugCount='0'></FileStats><FileStats path='easyupload/entity/FileUpload.java' size='35' bugCount='0'></FileStats><FileStats path='easyupload/entity/JUnitSuite.java' size='20' bugCount='0'></FileStats><FileStats path='easyupload/entity/LoginUser.java' size='15' bugCount='0'></FileStats><FileStats path='easyupload/entity/SessionAttributes.java' size='11' bugCount='0'></FileStats><FileStats path='easyupload/entity/TestGroup.java' size='20' bugCount='0'></FileStats><FileStats path='easyupload/entity/User.java' size='14' bugCount='0'></FileStats><FileStats path='easyupload/exception/FileNotFoundException.java' size='4' bugCount='0'></FileStats><FileStats path='easyupload/interceptor/LoginInterceptor.java' size='15' bugHash='7811c433e70f57953bd669bb99be8218' bugCount='1'></FileStats><FileStats path='easyupload/persistence/ServiceCallPersistence.java' size='9' bugCount='0'></FileStats><FileStats path='easyupload/persistence/impl/PropertiesParser.java' size='35' bugCount='0'></FileStats><FileStats path='easyupload/persistence/impl/PropertiesServiceCallPersistence.java' size='132' bugHash='71cfb6cd185bef76c3414271d3ae6d56' bugCount='1'></FileStats><FileStats path='easyupload/service/FileUploadService.java' size='13' bugHash='6c658e1ea929e6a64aad74f93cd5380d' bugCount='2'></FileStats><FileStats path='easyupload/service/IUserService.java' size='2' bugCount='0'></FileStats><FileStats path='easyupload/service/ServiceCall.java' size='51' bugCount='0'></FileStats><FileStats path='easyupload/service/ServiceCallManager.java' size='80' bugCount='0'></FileStats><FileStats path='easyupload/service/ServiceCallResponse.java' size='32' bugCount='0'></FileStats><FileStats path='easyupload/service/ServiceCaller.java' size='10' bugCount='0'></FileStats><FileStats path='easyupload/service/WatcherService.java' size='63' bugHash='3684993abc384e4fb44095b3ccd951d8' bugCount='5'></FileStats><FileStats path='easyupload/service/impl/UserServiceImpl.java' size='5' bugCount='0'></FileStats><FileStats path='easyupload/utils/ApplicationConstants.java' size='15' bugCount='0'></FileStats><FileStats path='easyupload/utils/ApplicationUtils.java' size='85' bugHash='fde78d951b7baad22730fbc2107cbceb' bugCount='5'></FileStats><FileStats path='easyupload/utils/FileFilter.java' size='20' bugCount='0'></FileStats><FileStats path='easyupload/utils/RandomUtil.java' size='11' bugHash='b522f7c28709530ac5b617c1bf9dfc53' bugCount='2'></FileStats><FileStats path='entity/JobInfo.java' size='39' bugCount='0'></FileStats><FileStats path='entity/Schedule.java' size='11' bugCount='0'></FileStats><FileStats path='hello/AppController.java' size='5' bugHash='e3fbb4643883459dad19f452a2f8bfcf' bugCount='1'></FileStats><FileStats path='hello/Application.java' size='6' bugCount='0'></FileStats><FileStats path='jks/dao/TestCaseReportMongoRepository.java' size='4' bugCount='0'></FileStats><FileStats path='jks/domain/TestCaseReport.java' size='61' bugCount='0'></FileStats><PackageStats package='easyupload.config' total_bugs='0' total_size='52' total_types='2'><ClassStats bugs='0' size='45' interface='false' sourceFile='ApplicationConfig.java' class='easyupload.config.ApplicationConfig'></ClassStats><ClassStats bugs='0' size='7' interface='false' sourceFile='DatabaseConfiguration.java' class='easyupload.config.DatabaseConfiguration'></ClassStats></PackageStats><PackageStats package='easyupload.controller' priority_1='2' total_bugs='54' priority_2='18' priority_3='34' total_size='312' total_types='5'><ClassStats bugs='16' size='135' priority_2='5' priority_3='11' interface='false' sourceFile='FileController.java' class='easyupload.controller.FileController'></ClassStats><ClassStats bugs='27' size='122' priority_1='2' priority_2='13' priority_3='12' interface='false' sourceFile='HelpController.java' class='easyupload.controller.HelpController'></ClassStats><ClassStats bugs='6' size='35' priority_3='6' interface='false' sourceFile='LoginController.java' class='easyupload.controller.LoginController'></ClassStats><ClassStats bugs='1' size='5' priority_3='1' interface='false' sourceFile='UrlController.java' class='easyupload.controller.UrlController'></ClassStats><ClassStats bugs='4' size='15' priority_3='4' interface='false' sourceFile='UtilController.java' class='easyupload.controller.UtilController'></ClassStats></PackageStats><PackageStats package='easyupload.entity' total_bugs='0' total_size='174' total_types='8'><ClassStats bugs='0' size='20' interface='false' sourceFile='CucumberFeature.java' class='easyupload.entity.CucumberFeature'></ClassStats><ClassStats bugs='0' size='39' interface='false' sourceFile='FileDetails.java' class='easyupload.entity.FileDetails'></ClassStats><ClassStats bugs='0' size='35' interface='false' sourceFile='FileUpload.java' class='easyupload.entity.FileUpload'></ClassStats><ClassStats bugs='0' size='20' interface='false' sourceFile='JUnitSuite.java' class='easyupload.entity.JUnitSuite'></ClassStats><ClassStats bugs='0' size='15' interface='false' sourceFile='LoginUser.java' class='easyupload.entity.LoginUser'></ClassStats><ClassStats bugs='0' size='11' interface='false' sourceFile='SessionAttributes.java' class='easyupload.entity.SessionAttributes'></ClassStats><ClassStats bugs='0' size='20' interface='false' sourceFile='TestGroup.java' class='easyupload.entity.TestGroup'></ClassStats><ClassStats bugs='0' size='14' interface='false' sourceFile='User.java' class='easyupload.entity.User'></ClassStats></PackageStats><PackageStats package='easyupload.exception' total_bugs='0' total_size='4' total_types='1'><ClassStats bugs='0' size='4' interface='false' sourceFile='FileNotFoundException.java' class='easyupload.exception.FileNotFoundException'></ClassStats></PackageStats><PackageStats package='easyupload.interceptor' total_bugs='1' priority_3='1' total_size='15' total_types='1'><ClassStats bugs='1' size='15' priority_3='1' interface='false' sourceFile='LoginInterceptor.java' class='easyupload.interceptor.LoginInterceptor'></ClassStats></PackageStats><PackageStats package='easyupload.persistence' total_bugs='0' total_size='9' total_types='1'><ClassStats bugs='0' size='9' interface='true' sourceFile='ServiceCallPersistence.java' class='easyupload.persistence.ServiceCallPersistence'></ClassStats></PackageStats><PackageStats package='easyupload.persistence.impl' total_bugs='1' priority_2='1' total_size='167' total_types='3'><ClassStats bugs='0' size='35' interface='false' sourceFile='PropertiesParser.java' class='easyupload.persistence.impl.PropertiesParser'></ClassStats><ClassStats bugs='1' size='121' priority_2='1' interface='false' sourceFile='PropertiesServiceCallPersistence.java' class='easyupload.persistence.impl.PropertiesServiceCallPersistence'></ClassStats><ClassStats bugs='0' size='11' interface='false' sourceFile='PropertiesServiceCallPersistence.java' class='easyupload.persistence.impl.PropertiesServiceCallPersistence$1'></ClassStats></PackageStats><PackageStats package='easyupload.service' total_bugs='7' priority_2='3' priority_3='4' total_size='251' total_types='8'><ClassStats bugs='2' size='13' priority_2='2' interface='false' sourceFile='FileUploadService.java' class='easyupload.service.FileUploadService'></ClassStats><ClassStats bugs='0' size='2' interface='true' sourceFile='IUserService.java' class='easyupload.service.IUserService'></ClassStats><ClassStats bugs='0' size='51' interface='false' sourceFile='ServiceCall.java' class='easyupload.service.ServiceCall'></ClassStats><ClassStats bugs='0' size='58' interface='false' sourceFile='ServiceCallManager.java' class='easyupload.service.ServiceCallManager'></ClassStats><ClassStats bugs='0' size='22' interface='false' sourceFile='ServiceCallManager.java' class='easyupload.service.ServiceCallManager$ServiceCallTask'></ClassStats><ClassStats bugs='0' size='32' interface='false' sourceFile='ServiceCallResponse.java' class='easyupload.service.ServiceCallResponse'></ClassStats><ClassStats bugs='0' size='10' interface='false' sourceFile='ServiceCaller.java' class='easyupload.service.ServiceCaller'></ClassStats><ClassStats bugs='5' size='63' priority_2='1' priority_3='4' interface='false' sourceFile='WatcherService.java' class='easyupload.service.WatcherService'></ClassStats></PackageStats><PackageStats package='easyupload.service.impl' total_bugs='0' total_size='5' total_types='1'><ClassStats bugs='0' size='5' interface='false' sourceFile='UserServiceImpl.java' class='easyupload.service.impl.UserServiceImpl'></ClassStats></PackageStats><PackageStats package='easyupload.utils' total_bugs='7' priority_2='2' priority_3='5' total_size='131' total_types='5'><ClassStats bugs='0' size='15' interface='false' sourceFile='ApplicationConstants.java' class='easyupload.utils.ApplicationConstants'></ClassStats><ClassStats bugs='1' size='73' priority_3='1' interface='false' sourceFile='ApplicationUtils.java' class='easyupload.utils.ApplicationUtils'></ClassStats><ClassStats bugs='4' size='12' priority_3='4' interface='false' sourceFile='ApplicationUtils.java' class='easyupload.utils.ApplicationUtils$1'></ClassStats><ClassStats bugs='0' size='20' interface='false' sourceFile='FileFilter.java' class='easyupload.utils.FileFilter'></ClassStats><ClassStats bugs='2' size='11' priority_2='2' interface='false' sourceFile='RandomUtil.java' class='easyupload.utils.RandomUtil'></ClassStats></PackageStats><PackageStats package='entity' total_bugs='0' total_size='50' total_types='2'><ClassStats bugs='0' size='39' interface='false' sourceFile='JobInfo.java' class='entity.JobInfo'></ClassStats><ClassStats bugs='0' size='11' interface='false' sourceFile='Schedule.java' class='entity.Schedule'></ClassStats></PackageStats><PackageStats package='hello' total_bugs='1' priority_3='1' total_size='11' total_types='2'><ClassStats bugs='1' size='5' priority_3='1' interface='false' sourceFile='AppController.java' class='hello.AppController'></ClassStats><ClassStats bugs='0' size='6' interface='false' sourceFile='Application.java' class='hello.Application'></ClassStats></PackageStats><PackageStats package='jks.dao' total_bugs='0' total_size='4' total_types='1'><ClassStats bugs='0' size='4' interface='true' sourceFile='TestCaseReportMongoRepository.java' class='jks.dao.TestCaseReportMongoRepository'></ClassStats></PackageStats><PackageStats package='jks.domain' total_bugs='0' total_size='61' total_types='1'><ClassStats bugs='0' size='61' interface='false' sourceFile='TestCaseReport.java' class='jks.domain.TestCaseReport'></ClassStats></PackageStats><FindBugsProfile><ClassProfile avgMicrosecondsPerInvocation='458' totalMilliseconds='743' name='edu.umd.cs.findbugs.classfile.engine.ClassInfoAnalysisEngine' maxMicrosecondsPerInvocation='19820' standardDeviationMicrosecondsPerInvocation='1225' invocations='1622'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='239' totalMilliseconds='392' name='edu.umd.cs.findbugs.classfile.engine.ClassDataAnalysisEngine' maxMicrosecondsPerInvocation='24850' standardDeviationMicrosecondsPerInvocation='1111' invocations='1640'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='861' totalMilliseconds='209' name='edu.umd.cs.findbugs.detect.FieldItemSummary' maxMicrosecondsPerInvocation='13753' standardDeviationMicrosecondsPerInvocation='1883' invocations='243'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='770' totalMilliseconds='179' name='com.h3xstream.findsecbugs.taintanalysis.TaintDataflowEngine' maxMicrosecondsPerInvocation='24261' standardDeviationMicrosecondsPerInvocation='2057' invocations='233'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='728' totalMilliseconds='177' name='edu.umd.cs.findbugs.detect.FindNoSideEffectMethods' maxMicrosecondsPerInvocation='8432' standardDeviationMicrosecondsPerInvocation='1393' invocations='243'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='187' totalMilliseconds='126' name='edu.umd.cs.findbugs.OpcodeStack$JumpInfoFactory' maxMicrosecondsPerInvocation='4072' standardDeviationMicrosecondsPerInvocation='307' invocations='677'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='516' totalMilliseconds='126' name='edu.umd.cs.findbugs.classfile.engine.bcel.TypeDataflowFactory' maxMicrosecondsPerInvocation='12563' standardDeviationMicrosecondsPerInvocation='1206' invocations='244'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='521' totalMilliseconds='121' name='edu.umd.cs.findbugs.classfile.engine.bcel.IsNullValueDataflowFactory' maxMicrosecondsPerInvocation='12107' standardDeviationMicrosecondsPerInvocation='1199' invocations='233'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='413' totalMilliseconds='101' name='edu.umd.cs.findbugs.classfile.engine.bcel.ValueNumberDataflowFactory' maxMicrosecondsPerInvocation='10331' standardDeviationMicrosecondsPerInvocation='953' invocations='246'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='420' totalMilliseconds='97' name='edu.umd.cs.findbugs.ba.npe.NullDerefAndRedundantComparisonFinder' maxMicrosecondsPerInvocation='5033' standardDeviationMicrosecondsPerInvocation='688' invocations='232'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='317' totalMilliseconds='77' name='edu.umd.cs.findbugs.classfile.engine.bcel.CFGFactory' maxMicrosecondsPerInvocation='9355' standardDeviationMicrosecondsPerInvocation='676' invocations='245'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='532' totalMilliseconds='75' name='edu.umd.cs.findbugs.detect.FindRefComparison$SpecialTypeAnalysis' maxMicrosecondsPerInvocation='10610' standardDeviationMicrosecondsPerInvocation='1185' invocations='142'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='324' totalMilliseconds='75' name='edu.umd.cs.findbugs.classfile.engine.bcel.UnconditionalValueDerefDataflowFactory' maxMicrosecondsPerInvocation='5240' standardDeviationMicrosecondsPerInvocation='557' invocations='233'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='306' totalMilliseconds='74' name='edu.umd.cs.findbugs.detect.NoteDirectlyRelevantTypeQualifiers' maxMicrosecondsPerInvocation='6762' standardDeviationMicrosecondsPerInvocation='675' invocations='243'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='293' totalMilliseconds='71' name='edu.umd.cs.findbugs.classfile.engine.bcel.MethodGenFactory' maxMicrosecondsPerInvocation='44247' standardDeviationMicrosecondsPerInvocation='2819' invocations='245'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='42' totalMilliseconds='66' name='edu.umd.cs.findbugs.util.TopologicalSort' maxMicrosecondsPerInvocation='1215' standardDeviationMicrosecondsPerInvocation='77' invocations='1572'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='154' totalMilliseconds='62' name='edu.umd.cs.findbugs.classfile.engine.bcel.JavaClassAnalysisEngine' maxMicrosecondsPerInvocation='12669' standardDeviationMicrosecondsPerInvocation='670' invocations='405'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='1279' totalMilliseconds='52' name='edu.umd.cs.findbugs.detect.FindOpenStream' maxMicrosecondsPerInvocation='14781' standardDeviationMicrosecondsPerInvocation='3242' invocations='41'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='213' totalMilliseconds='51' name='edu.umd.cs.findbugs.detect.BuildObligationPolicyDatabase' maxMicrosecondsPerInvocation='3216' standardDeviationMicrosecondsPerInvocation='391' invocations='243'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='213' totalMilliseconds='51' name='edu.umd.cs.findbugs.detect.CalledMethods' maxMicrosecondsPerInvocation='2903' standardDeviationMicrosecondsPerInvocation='441' invocations='243'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='192' totalMilliseconds='46' name='edu.umd.cs.findbugs.detect.FunctionsThatMightBeMistakenForProcedures' maxMicrosecondsPerInvocation='4658' standardDeviationMicrosecondsPerInvocation='479' invocations='243'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='188' totalMilliseconds='45' name='edu.umd.cs.findbugs.detect.ReflectiveClasses' maxMicrosecondsPerInvocation='11107' standardDeviationMicrosecondsPerInvocation='768' invocations='243'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='161' totalMilliseconds='39' name='edu.umd.cs.findbugs.detect.OverridingEqualsNotSymmetrical' maxMicrosecondsPerInvocation='10512' standardDeviationMicrosecondsPerInvocation='696' invocations='243'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='157' totalMilliseconds='38' name='edu.umd.cs.findbugs.detect.BuildStringPassthruGraph' maxMicrosecondsPerInvocation='4308' standardDeviationMicrosecondsPerInvocation='414' invocations='243'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='151' totalMilliseconds='36' name='edu.umd.cs.findbugs.detect.EqualsOperandShouldHaveClassCompatibleWithThis' maxMicrosecondsPerInvocation='15216' standardDeviationMicrosecondsPerInvocation='994' invocations='243'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='667' totalMilliseconds='33' name='edu.umd.cs.findbugs.ba.obl.ObligationAnalysis' maxMicrosecondsPerInvocation='2582' standardDeviationMicrosecondsPerInvocation='580' invocations='50'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='117' totalMilliseconds='27' name='edu.umd.cs.findbugs.classfile.engine.bcel.ConstantDataflowFactory' maxMicrosecondsPerInvocation='3259' standardDeviationMicrosecondsPerInvocation='273' invocations='233'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='565' totalMilliseconds='23' name='edu.umd.cs.findbugs.detect.LoadOfKnownNullValue' maxMicrosecondsPerInvocation='4678' standardDeviationMicrosecondsPerInvocation='843' invocations='41'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='964' totalMilliseconds='23' name='edu.umd.cs.findbugs.detect.StreamResourceTracker' maxMicrosecondsPerInvocation='3322' standardDeviationMicrosecondsPerInvocation='954' invocations='24'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='547' totalMilliseconds='22' name='edu.umd.cs.findbugs.detect.FindInconsistentSync2' maxMicrosecondsPerInvocation='3596' standardDeviationMicrosecondsPerInvocation='702' invocations='41'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='92' totalMilliseconds='22' name='edu.umd.cs.findbugs.detect.ExplicitSerialization' maxMicrosecondsPerInvocation='5848' standardDeviationMicrosecondsPerInvocation='507' invocations='243'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='89' totalMilliseconds='22' name='edu.umd.cs.findbugs.classfile.engine.bcel.ValueRangeAnalysisFactory' maxMicrosecondsPerInvocation='12076' standardDeviationMicrosecondsPerInvocation='782' invocations='245'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='529' totalMilliseconds='21' name='edu.umd.cs.findbugs.detect.UnreadFields' maxMicrosecondsPerInvocation='1881' standardDeviationMicrosecondsPerInvocation='525' invocations='41'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='5' totalMilliseconds='20' name='edu.umd.cs.findbugs.ba.npe.TypeQualifierNullnessAnnotationDatabase' maxMicrosecondsPerInvocation='661' standardDeviationMicrosecondsPerInvocation='19' invocations='4025'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='492' totalMilliseconds='20' name='edu.umd.cs.findbugs.detect.DumbMethods' maxMicrosecondsPerInvocation='2297' standardDeviationMicrosecondsPerInvocation='607' invocations='41'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='491' totalMilliseconds='20' name='com.h3xstream.findsecbugs.file.PathTraversalDetector' maxMicrosecondsPerInvocation='4934' standardDeviationMicrosecondsPerInvocation='835' invocations='41'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='466' totalMilliseconds='19' name='com.h3xstream.findsecbugs.crypto.cipher.TDesUsageDetector' maxMicrosecondsPerInvocation='12273' standardDeviationMicrosecondsPerInvocation='1878' invocations='41'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='435' totalMilliseconds='17' name='com.h3xstream.findsecbugs.template.VelocityDetector' maxMicrosecondsPerInvocation='11985' standardDeviationMicrosecondsPerInvocation='1834' invocations='41'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='434' totalMilliseconds='17' name='edu.umd.cs.findbugs.detect.FindRefComparison' maxMicrosecondsPerInvocation='5423' standardDeviationMicrosecondsPerInvocation='877' invocations='41'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='77' totalMilliseconds='17' name='edu.umd.cs.findbugs.classfile.engine.bcel.LiveLocalStoreDataflowFactory' maxMicrosecondsPerInvocation='3185' standardDeviationMicrosecondsPerInvocation='228' invocations='225'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='426' totalMilliseconds='17' name='edu.umd.cs.findbugs.detect.CheckRelaxingNullnessAnnotation' maxMicrosecondsPerInvocation='5962' standardDeviationMicrosecondsPerInvocation='960' invocations='41'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='419' totalMilliseconds='17' name='com.h3xstream.findsecbugs.crypto.cipher.RsaNoPaddingDetector' maxMicrosecondsPerInvocation='10755' standardDeviationMicrosecondsPerInvocation='1645' invocations='41'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='1' totalMilliseconds='17' name='edu.umd.cs.findbugs.DetectorToDetector2Adapter' maxMicrosecondsPerInvocation='182' standardDeviationMicrosecondsPerInvocation='2' invocations='9831'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='409' totalMilliseconds='16' name='com.h3xstream.findsecbugs.injection.crlf.CrlfLogInjectionDetector' maxMicrosecondsPerInvocation='3912' standardDeviationMicrosecondsPerInvocation='773' invocations='41'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='406' totalMilliseconds='16' name='com.h3xstream.findsecbugs.injection.http.HttpParameterPollutionDetector' maxMicrosecondsPerInvocation='8256' standardDeviationMicrosecondsPerInvocation='1275' invocations='41'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='393' totalMilliseconds='16' name='com.h3xstream.findsecbugs.injection.sql.SqlInjectionDetector' maxMicrosecondsPerInvocation='7950' standardDeviationMicrosecondsPerInvocation='1224' invocations='41'></ClassProfile></FindBugsProfile></FindBugsSummary><ClassFeatures></ClassFeatures><History></History></BugCollection>